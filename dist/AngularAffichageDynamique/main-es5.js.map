{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/absence-form/absence-form.component.ts","webpack:///src/app/absence-form/absence-form.component.html","webpack:///src/app/absence-update-form/absence-update-form.component.ts","webpack:///src/app/absence-update-form/absence-update-form.component.html","webpack:///src/app/absences/absences.component.ts","webpack:///src/app/absences/absences.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cours-details/cours-details.component.ts","webpack:///src/app/cours-details/cours-details.component.html","webpack:///src/app/cours/cours.component.ts","webpack:///src/app/cours/cours.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/indisponibilite/indisponibilite.component.ts","webpack:///src/app/indisponibilite/indisponibilite.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/messages-creation/messages-creation.component.ts","webpack:///src/app/messages-creation/messages-creation.component.html","webpack:///src/app/messages-modification/messages-modification.component.ts","webpack:///src/app/messages-modification/messages-modification.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/persons-details/persons-details.component.ts","webpack:///src/app/persons-details/persons-details.component.html","webpack:///src/app/persons-form/persons-form.component.ts","webpack:///src/app/persons-form/persons-form.component.html","webpack:///src/app/persons-resultats/persons-resultats.component.ts","webpack:///src/app/persons-resultats/persons-resultats.component.html","webpack:///src/app/persons/persons.component.ts","webpack:///src/app/persons/persons.component.html","webpack:///src/app/restapi.service.ts","webpack:///src/app/service/basic-auth-intercept.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AbsenceFormComponent","service","route","router","getPersoninfo","getAbsencesinfo","getPersons","subscribe","person","persons","getIndisponibilite","absence","absences","idPerson","indispo_id","dateDebut","dateFin","console","log","addAbsence","save","selector","templateUrl","styleUrls","AbsenceUpdateFormComponent","getinfo","snapshot","params","id1","id2","idSpecifique","id3","getAbsenceByID","updateAbsence","update","AbsencesComponent","getAbsence","response","getAbsences","deleteAbsence","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","provide","useClass","multi","declarations","providers","bootstrap","CoursDetailsComponent","getInfo","getElevesresultat","getCoursid","cours","getResultatByCours","resultat","CoursComponent","columnsToDisplay","getCours","data","HomeComponent","localStorage","clear","navigate","doLogout","IndisponibiliteComponent","LoginComponent","resp","login","username","password","sessionStorage","setItem","btoa","doLogin","MessagesCreationComponent","contenu","undefined","titreMessage","nomPerson","getItem","createdDate","Date","now","toString","addMessage","valider","annuler","MessagesModificationComponent","getMessageByID","message","updateMessage","goBack","MessagesComponent","getMessages","messages","deleteMessage","PersonsDetailsComponent","getPersonid","nom","prenom","email","dateAnniversaire","updateEleve","PersonsFormComponent","getRoles","idRole","addEleve","role","roles","PersonsResultatsComponent","getresultatbyPerson","getResultatByPerson","PersonsComponent","getPerson","eleve","deleteEleve","add","idRoles","getPersonbyRoles","filtrage","RestapiService","http","url","headers","Authorization","authString","get","concat","post","put","Message","idperson","idindispo","idspecifique","idIndispo","idCours","indisponibilite","providedIn","BasicAuthInterceptService","next","clone","setHeaders","handle","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Absence} from '../absences/absence';\n\n@Component({\n  selector: 'app-absence-form',\n  templateUrl: './absence-form.component.html',\n  styleUrls: ['./absence-form.component.css']\n})\nexport class AbsenceFormComponent implements OnInit {\n  persons: any;\n  idPerson:any;\n  absences :any;\n  idAbsence :any;\n\n\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router : Router) { }\n\n  ngOnInit(): void {\n    this.getPersoninfo();\n    this.getAbsencesinfo();\n  }\n\n  public getPersoninfo(){\n    this.service.getPersons()\n      .subscribe(person => this.persons = person);\n  }\n\n  public getAbsencesinfo(){\n    this.service.getIndisponibilite()\n      .subscribe(absence => this.absences = absence);\n  }\n\n  save(idPerson: String, indispo_id: String, dateDebut: String, dateFin: String) {\n    console.log(idPerson)\n    this.service.addAbsence({idPerson,indispo_id,dateDebut,dateFin}as Absence).subscribe()\n  }\n}\n","<h1> Ajout absence </h1>\n\n\n<h2>Personne absente</h2>\n  <form appearance=\"fill\">\n    <label>Personne absente</label>\n    <select  matNativeControl [(ngModel)]=\"idPerson\"  name=\"person\"  class=\"form-control form-control-sm\" #id_person>\n\n      <option  *ngFor=\"let person of persons\" [value]=\"person.idPerson\" >\n        {{person.nom}} {{person.prenom}}\n      </option>\n    </select>\n  </form>\n\n<h2> raison absence </h2>\n<form>\n\n  <select [(ngModel)]=\" idAbsence\"  name=\"absence\"  class=\"form-control form-control-sm\" #idindisponibilite >\n\n    <option  *ngFor=\"let absence of absences\" [value]=\"absence.idindisponibilite\"  >\n      {{absence.type}}\n    </option>\n  </select>\n</form>\n<br>\n<label >Date début</label>\n<div >\n  <input  class=\"form-control\" type=\"date\"  id=\"example-datetime-local-input\" #datedebut>\n</div>\n<div>\n  <label >Date de fin</label>\n  <div >\n    <input  class=\"form-control\" type=\"date\"  id=\"example-datetime-local-input\" #datefin>\n  </div>\n  <div>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"save(id_person.value,idindisponibilite.value,datedebut.value,datefin.value);\">   Sauvegarder</button>\n","import { Component, OnInit } from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Absence} from '../absences/absence';\n\n@Component({\n  selector: 'app-absence-update-form',\n  templateUrl: './absence-update-form.component.html',\n  styleUrls: ['./absence-update-form.component.css']\n})\nexport class AbsenceUpdateFormComponent implements OnInit {\n\n  absence : any;\n  persons: any;\n  absences : any;\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router : Router) { }\n\n  ngOnInit(): void {\n    this.getinfo();\n    this.getAbsencesinfo();\n    this.getPersoninfo();\n  }\n\n  private getinfo() {\n    const indispo_id = this.route.snapshot.params.id1;\n    const idPerson = this.route.snapshot.params.id2;\n    const idSpecifique = this.route.snapshot.params.id3;\n    this.service.getAbsenceByID(idPerson,indispo_id,idSpecifique).subscribe(absence => this .absence = absence);\n  }\n\n  public getPersoninfo(){\n    this.service.getPersons()\n      .subscribe(person => this.persons = person);\n  }\n\n  public getAbsencesinfo(){\n    this.service.getIndisponibilite()\n      .subscribe(absence => this.absences = absence);\n  }\n\n  update(idPerson: any, indispo_id: any, dateDebut: any, dateFin: any) {\n\n  this.service.updateAbsence({idPerson,indispo_id,dateDebut,dateFin} as Absence,this.route.snapshot.params.id2,this.route.snapshot.params.id1,this.route.snapshot.params.id3).subscribe();\n  }\n}\n","<h1> modification absence </h1>\n\n\n<h2>Personne absente</h2>\n<form appearance=\"fill\">\n  <label>Personne absente</label>\n  <select disabled  [ngModel]=\"absence?.idPerson\" name=\"person\"  class=\"form-control form-control-sm\" #id_person>\n\n    <option  *ngFor=\"let person of persons\" [value]=\"person.idPerson\" >\n      {{person.nom}} {{person.prenom}}\n    </option>\n  </select>\n</form>\n\n\n<form>\n  <label>raison d'absence</label>\n  <select disabled [ngModel]=\"absence?.indispo_id\" name=\"absence\"  class=\"form-control form-control-sm\" #idindisponibilite >\n    <option  *ngFor=\"let absence of absences\" [value]=\"absence.idindisponibilite\"  >\n      {{absence.type}}\n    </option>\n  </select>\n</form>\n<br>\n<label >Date début</label>\n<div >\n  <input  class=\"form-control\" type=\"date\" [ngModel]=\"absence?.dateDebut  | date :'yyyy-LL-dd'\" id=\"example-datetime-local-input\" #datedebut>\n</div>\n<div>\n  <label >Date de fin</label>\n  <div >\n    <input  class=\"form-control\" type=\"date\" [ngModel]=\"absence?.dateFin  | date :'yyyy-LL-dd'\" id=\"example-datetime-local-input\" #datefin>\n  </div>\n  <div>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"update(id_person.value,idindisponibilite.value,datedebut.value,datefin.value);\">   Sauvegarder</button>\n","import {Component, OnInit} from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-absences',\n  templateUrl: './absences.component.html',\n  styleUrls: ['./absences.component.css']\n})\nexport class AbsencesComponent implements OnInit {\n   absence: any;\n\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router: Router) { }\n\n  ngOnInit(): void {\n    this.getAbsence();\n  }\n\n  getAbsence(){\n    const response = this.service.getAbsences();\n    response.subscribe(absence => this.absence = absence);\n  }\n\n  delete(indispo_id: any, idPerson: any, idSpecifique: any) {\nthis.service.deleteAbsence(idPerson,indispo_id,idSpecifique).subscribe()\n  }\n}\n","<h1> Liste des absences</h1>\r\n\r\n<button  class=\"btn btn-info\" routerLink=\"../creationabsence\"> Ajouter absence</button>\r\n\r\n<table class=\"table table-striped\">\r\n  <thead>\r\n  <tr>\r\n    <th scope=\"col\">#</th>\r\n    <th scope=\"col\">Personne</th>\r\n    <th scope=\"col\">Type Absence</th>\r\n    <th scope=\"col\">Date de Début</th>\r\n    <th scope=\"col\"> Date de fin</th>\r\n    <th scope=\"col\"> </th>\r\n    <th scope=\"col\"> </th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let absence of absence, index as i\">\r\n    <th scope=\"row\">{{ i + 1 }}</th>\r\n\r\n\r\n    <td scope=\"row\">{{absence.nomPerson}}  {{absence.prenomPerson}}</td>\r\n    <td scope=\"row\">{{absence.nomIndispo}}</td>\r\n    <td scope=\"row\">{{absence.dateDebut  | date :'dd-LL-yyyy'}}</td>\r\n    <td scope=\"row\">{{absence.dateFin | date :'dd-LL-yyyy'}}</td>\r\n    <td scope=\"row\">\r\n      <button type=\"button\" class=\"btn btn-secondary\" routerLink=\"../modificationabsence/{{absence.indispo_id}}/{{absence.idPerson}}/{{absence.idSpecifique}}\"> Modifier </button>\r\n\r\n    </td>\r\n\r\n    <td scope=\"row\">\r\n      <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete(absence.indispo_id,absence.idPerson,absence.idSpecifique)\"> Supprimer </button>\r\n\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n  </table>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {CoursComponent} from './cours/cours.component';\r\nimport {CoursDetailsComponent} from './cours-details/cours-details.component';\r\nimport {PersonsComponent} from './persons/persons.component';\r\nimport {MessagesComponent} from './messages/messages.component';\r\nimport {AbsencesComponent} from './absences/absences.component';\r\nimport {PersonsResultatsComponent} from './persons-resultats/persons-resultats.component';\r\nimport {PersonsDetailsComponent} from './persons-details/persons-details.component';\r\nimport {MessagesCreationComponent} from './messages-creation/messages-creation.component';\r\nimport {PersonsFormComponent} from './persons-form/persons-form.component';\r\nimport {MessagesModificationComponent} from './messages-modification/messages-modification.component';\r\nimport {AbsenceFormComponent} from './absence-form/absence-form.component';\r\nimport {AbsenceUpdateFormComponent} from './absence-update-form/absence-update-form.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'home', component: HomeComponent,\r\n  children: [\r\n    {path: 'cours', component: CoursComponent},\r\n    {path: 'detailscours/:id', component: CoursDetailsComponent},\r\n    {path : 'detailseleve/:id', component: PersonsResultatsComponent},\r\n    {path : 'eleves', component : PersonsComponent},\r\n    {path: 'modifier/:id', component: PersonsDetailsComponent},\r\n    {path : 'messages', component : MessagesComponent},\r\n    {path : 'absences', component : AbsencesComponent},\r\n    {path : 'creationmessage', component : MessagesCreationComponent},\r\n    {path : 'formeleve', component: PersonsFormComponent},\r\n    {path : 'modificationmessage/:id', component : MessagesModificationComponent},\r\n    {path : 'creationabsence', component : AbsenceFormComponent},\r\n    {path : 'modificationabsence/:id1/:id2/:id3', component : AbsenceUpdateFormComponent},\r\n  ]},\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'AngularAffichageDynamique';\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {BasicAuthInterceptService} from './service/basic-auth-intercept.service';\r\nimport {CoursComponent} from './cours/cours.component';\r\nimport {CoursDetailsComponent} from './cours-details/cours-details.component';\r\nimport {PersonsComponent} from './persons/persons.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {AbsencesComponent} from './absences/absences.component';\r\nimport {MessagesComponent} from './messages/messages.component';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {PersonsResultatsComponent} from './persons-resultats/persons-resultats.component';\r\nimport {PersonsDetailsComponent} from './persons-details/persons-details.component';\r\nimport { MessagesCreationComponent } from './messages-creation/messages-creation.component';\r\nimport {NgxWigModule} from 'ngx-wig';\r\nimport { PersonsFormComponent } from './persons-form/persons-form.component';\r\nimport { MessagesModificationComponent } from './messages-modification/messages-modification.component';\r\nimport { AbsenceFormComponent } from './absence-form/absence-form.component';\r\nimport { IndisponibiliteComponent } from './indisponibilite/indisponibilite.component';\nimport { AbsenceUpdateFormComponent } from './absence-update-form/absence-update-form.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    CoursComponent,\r\n    CoursDetailsComponent,\r\n    PersonsComponent,\r\n    AbsencesComponent,\r\n    MessagesComponent,\r\n    PersonsResultatsComponent,\r\n    PersonsDetailsComponent,\r\n    MessagesCreationComponent,\r\n    PersonsFormComponent,\r\n    MessagesModificationComponent,\r\n    AbsenceFormComponent,\r\n    IndisponibiliteComponent,\r\n    AbsenceUpdateFormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    NgbModule,\r\n    NgxWigModule,\r\n\r\n],\r\n\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptService, multi: true,\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, OnInit} from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-cours-details',\n  templateUrl: './cours-details.component.html',\n  styleUrls: ['./cours-details.component.css']\n})\nexport class CoursDetailsComponent implements OnInit {\n\n   cours: any;\n   resultat : any;\n  constructor(private service: RestapiService, private route: ActivatedRoute, ) { }\n\n  ngOnInit(): void {\n    this.getInfo();\n    this.getElevesresultat();\n  }\n\n  getInfo(){\n    const id = this.route.snapshot.params.id;\n    this.service.getCoursid(id)\n      .subscribe(cours => this.cours = cours);\n  }\n\n  getElevesresultat(){\n    const id = this.route.snapshot.params.id;\n    this.service.getResultatByCours(id)\n      .subscribe(resultat => this.resultat = resultat);\n  }\n}\n","\n\n\n<div *ngIf=\"cours\">\n  <h2>{{cours.name}}</h2>\n</div>\n\n<h2> Tableau des résultat</h2>\n\n<table class=\"table table-striped\">\n  <thead>\n  <th scope=\"col\">#</th>\n  <th scope=\"col\">Nom</th>\n  <th scope=\"col\">Prenom</th>\n  <th scope=\"col\">resultat</th>\n  <th scope=\"col\"> Réussite </th>\n\n  </thead>\n  <tbody>\n  <tr *ngFor=\"let resultat of resultat, index as i\">\n    <th scope=\"row\">{{i+1}}</th>\n    <td scope=\"row\">{{resultat.nomPerson}}</td>\n    <td scope=\"row\">{{resultat.prenomPerson}}</td>\n    <td scope=\"row\">{{resultat.resultat}}</td>\n    <td scope=\"row\">{{resultat.reussite}}</td>\n\n  </tbody>\n\n</table>\n\n","import {Component, OnInit} from '@angular/core';\nimport {RestapiService} from '../restapi.service';\n\n@Component({\n  selector: 'app-cours-detail',\n  templateUrl: './cours.component.html',\n  styleUrls: ['./cours.component.css']\n})\nexport class CoursComponent implements OnInit {\n\n  cours;\n\n  columnsToDisplay = ['name'];\n\n\n  constructor(private service: RestapiService) { }\n\n  ngOnInit(): void {\n    this.getCours();\n  }\n  getCours() {\n    const response = this.service.getCours();\n    response.subscribe(data => this.cours = data);\n\n\n  }\n}\n","<head>\n  <title>Affichage Dynamique</title>\n\n\n</head>\n\n<button type=\"button\" class=\"btn btn-primary\" routerLink=\"../detailscours/{{cours?.idCours}}\"> Ajouter Cours</button>\n\n\n\n  <table  class=\"table table-striped\">\n    <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\" sortable=\"name\">Nom </th>\n      <th scope=\"col\" sortable=\"datedebut\"> Date Début</th>\n      <th scope=\"col\" sortable=\"datefin\"> Date fin</th>\n      <th scope=\"col\" > Détails</th>\n      <th scope=\"col\" > </th>\n\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let cours of cours, index as i\">\n      <th scope=\"row\">{{ i + 1 }}</th>\n      <td scope=\"row\">{{cours?.name}}</td>\n      <td scope=\"row\">{{cours?.datedebut |date :\"dd-MM-yyyy\"}}</td>\n      <td scope=\"row\">{{cours?.datefin |date :\"dd-MM-yyyy\"}}</td>\n      <td scope=\"row\">\n      <button type=\"button\" class=\"btn btn-primary\" routerLink=\"../detailscours/{{cours?.idCours}}\"> Détails</button>\n\n      </td>\n\n    </tr>\n\n    </tbody>\n  </table>\n\n\n\n","import {Component, OnInit} from '@angular/core';\r\nimport {RestapiService} from '../restapi.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  person: any;\r\n  constructor(private service: RestapiService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  doLogout() {\r\n    localStorage.clear();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"fr\">\r\n\r\n<head>\r\n  <title>Affichage Dynamique</title>\r\n  <meta charset=\"utf-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n</head>\r\n\r\n<body>\r\n<ul ngbNav #nav=\"ngbNav\" class=\"nav-tabs\">\r\n  <li ngbNavItem>\r\n<button class=\"btn-primary\"  [routerLink]=\"['cours'] \"> cours</button>\r\n  </li>\r\n  <button class=\"btn-primary\" [routerLink]=\"['absences']\">  absences</button>\r\n  <button class=\"btn-primary\" [routerLink]=\"['messages']\" >  messages</button>\r\n  <button class=\"btn-primary\"[routerLink]=\"['eleves']\" > listes </button>\r\n\r\n  <button class=\"btn-danger\"  (click)=\"doLogout()\" >Déconnection </button>\r\n\r\n\r\n\r\n\r\n</ul>\r\n<router-outlet></router-outlet>\r\n\r\n\r\n\r\n</body>\r\n\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-indisponibilite',\n  templateUrl: './indisponibilite.component.html',\n  styleUrls: ['./indisponibilite.component.css']\n})\nexport class IndisponibiliteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>indisponibilite works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;\n  password: string;\n  message: any;\n\n  constructor(private service: RestapiService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  doLogin(){\n   const resp =  this.service.login(this.username, this.password);\n   resp.subscribe(data => {\n     sessionStorage.setItem('basicauth', btoa(this.username + ':' + this.password)) ;\n     this.router.navigate([\"/home\"]);\n    });\n  }\n\n}\n","<div class=\"background-wrap\">\r\n  <div class=\"background\"></div>\r\n</div>\r\n\r\n<form id=\"accesspanel\" action=\"\">\r\n  <h1 id=\"litheader\">Affichage dynamique</h1>\r\n  <div class=\"inset\">\r\n    <p>\r\n      <input type=\"text\" name=\"username\" [(ngModel)]=\"username\" id=\"email\" placeholder=\"username\">\r\n    </p>\r\n    <p>\r\n      <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" id=\"password\" placeholder=\"password\">\r\n    </p>\r\n  </div>\r\n  <p class=\"p-container\">\r\n    <input type=\"submit\" name=\"Login\" id=\"go\" value=\"Login\" (click)=\"doLogin()\">\r\n  </p>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Message} from '../messages/message';\nimport {Persons} from '../persons/persons';\nimport {dateComparator} from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools';\nimport {MessagesComponent} from '../messages/messages.component';\n\n@Component({\n  selector: 'app-messages-creation',\n  templateUrl: './messages-creation.component.html',\n  styleUrls: ['./messages-creation.component.css']\n})\nexport class MessagesCreationComponent implements OnInit {\n  contenu: any;\n  titreMessage: any;\n\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router: Router,) { }\n\n  ngOnInit(): void {\n  }\n\n  valider() {\n    if(!(this.contenu == undefined && this.titreMessage ==undefined)){\n\n      const contenu =this.contenu;\n      const titreMessage= this.titreMessage;\n      const nomPerson = localStorage.getItem('username');\n      const createdDate = Date.now().toString();\n\n\n      this.service.addMessage({contenu,titreMessage, createdDate, nomPerson} as Message).subscribe();\n    }\n  }\n\n  annuler() {\n    this.router.navigate([\"../home/messages\"]);\n  }\n}\n\n","<h1> Création de Message</h1>\n\n<h2> Titre du message</h2>\n<input [(ngModel)]=\"titreMessage\" class=\"form-control\" type=\"text\" placeholder=\"Titre du Message\">\n<h2> Corps du message </h2>\n<ngx-wig [(ngModel)]=\"contenu\" placeholder=\"Corps du message\"></ngx-wig>\n\n<button type=\"button\" class=\"btn btn-success\" (click)=\"valider()\"> Enregistrer </button>\n<button type=\"button\" class=\"btn btn-danger\" (click)=\"annuler()\"> Annuler </button>\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Persons} from '../persons/persons';\nimport {Message} from '../messages/message';\n\n@Component({\n  selector: 'app-messages-modification',\n  templateUrl: './messages-modification.component.html',\n  styleUrls: ['./messages-modification.component.css']\n})\nexport class MessagesModificationComponent implements OnInit {\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router : Router) { }\n\n  message: any;\n  contenu: any;\n  titreMessage: any;\n  ngOnInit(): void {\n    this.getInfo();\n\n  }\n\n  getInfo(){\n    const id = this.route.snapshot.params.id;\n    this.service.getMessageByID(id)\n      .subscribe(message => this.message = message);\n\n  }\n\n  update(titreMessage: String, contenu: String) {\n\n      const id = this.route.snapshot.params.id;\n\n\n      const nomPerson = localStorage.getItem('username');\n      const createdDate = Date.now().toString();\n\n\n      this.service.updateMessage({contenu,titreMessage, createdDate, nomPerson} as Message,id).subscribe();\n\n   // this.router.navigate([\"./home/eleves\"]);\n  }\n\n  goBack() {\n    this.router.navigate([\"./home/messages\"]);\n  }}\n","<h1> Modication de Message</h1>\r\n\r\n<h2> Titre du message</h2>\r\n<input [ngModel]=\"message?.titreMessage\" placeholder=\"{{message.titreMessage}}\">\r\n<h2> Corps du message </h2>\r\n<ngx-wig [ngModel]=\"message?.contenu\" placeholder=\"{{message.contenu}}\"></ngx-wig>\r\n\r\n<button type=\"button\" class=\"btn btn-success\" (click)=\"update(message.titreMessage,message.contenu)\"> Enregistrer </button>\r\n<button type=\"button\" class=\"btn btn-danger\" (click)=\"goBack()\"> Annuler </button>\r\n\r\n","import {Component, OnInit} from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router: Router, ) { }\n\n  messages:any\n\n  ngOnInit(): void {\n    this.getMessages()\n  }\n\n  getMessages() {\n    const response = this.service.getMessages();\n    response.subscribe(message => this.messages = message);\n  }\n\n  delete(idPerson: any) {\n    console.log(idPerson)\n\n\n    this.service.deleteMessage(idPerson).subscribe();\n  }\n}\n","<h2>Liste des messages</h2>\n<button type=\"button\" class=\"btn btn-info\" routerLink=\"../creationmessage\"> Nouveau Message </button>\n<body>\n<table class=\"table table-striped\">\n  <tr>\n    <th scope=\"col\">#</th>\n    <th scope=\"col\">Titre message</th>\n    <th scope=\"col\">Date de Création</th>\n    <th scope=\"col\">Auteur</th>\n    <th scope=\"col\"> </th>\n    <th scope=\"col\"> </th>\n  </tr>\n\n  <thead>\n\n  </thead>\n\n  <tbody>\n  <tr *ngFor=\"let message of messages, index as i\">\n    <th scope=\"row\">{{ i + 1 }}</th>\n\n\n    <td scope=\"row\">{{message.titreMessage}}</td>\n    <td scope=\"row\">{{message.createdDate | date :'dd-LL-yyyy'}}</td>\n    <td scope=\"row\">{{message.nomPerson }}</td>\n    <td scope=\"row\">\n      <button type=\"button\" class=\"btn btn-secondary\" routerLink=\"../modificationmessage/{{message.idMessage}}\"> Modifier </button>\n\n    </td>\n    <td scope=\"row\">\n\n      <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete(message.idMessage)\"> Supprimer </button>\n\n    </td>\n  </tr>\n\n\n</table>\n\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Persons} from '../persons/persons';\n\n@Component({\n  selector: 'app-eleves-details',\n  templateUrl: './persons-details.component.html',\n  styleUrls: ['./persons-details.component.css']\n})\nexport class PersonsDetailsComponent implements OnInit {\n\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router : Router) { }\n\n  person: any;\n  ngOnInit(): void {\n    this.getInfo();\n\n  }\n\n  getInfo(){\n    const id = this.route.snapshot.params.id;\n    this.service.getPersonid(id)\n      .subscribe(person => this.person = person);\n  }\n\n  update(nom: string, prenom: string, email: string , dateAnniversaire: string) {\n    const id = this.route.snapshot.params.id;\n    this.service.updateEleve({nom, prenom, email, dateAnniversaire} as Persons,id).subscribe();\n    this.router.navigate([\"./home/eleves\"]);\n  }\n\n  goBack() {\n    this.router.navigate([\"./home/eleves\"]);\n  }}\n","<div >\n  <label>Nom</label>\n  <input #nom [ngModel]=\"person.nom\"  placeholder=\"{{person?.nom}}\"/>\n</div>\n<div >\n  <label>Prenom</label>\n  <input #prenom [ngModel]=\"person.prenom\" placeholder=\"{{person?.prenom}}\">\n</div>\n\n<div >\n  <label >Adresse Email</label>\n  <input   [ngModel]=\"person.email\" type=\"email\" class=\"form-control\" placeholder=\"{{person?.email}}\"  #email/>\n\n</div >\n\n<label >Date de naissance</label>\n\n<div >\n  <input  class=\"form-control\" type=\"date\" [ngModel]=\"person?.dateAnniversaire  | date :'yyyy-LL-dd'\" id=\"example-datetime-local-input\" #date>\n</div>\n\n\n<button type=\"button\" class=\"btn btn-success\" (click)=\"update(nom.value,prenom.value,email.value, date.value ); nom.value =''\">   Sauvegarder</button>\n<button type=\"button\" class=\"btn btn-danger\" (click)=\"goBack()\">   Annuler </button>\n","import { Component, OnInit } from '@angular/core';\nimport {Persons} from '../persons/persons';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-eleves-form',\n  templateUrl: './persons-form.component.html',\n  styleUrls: ['./persons-form.component.css']\n})\nexport class PersonsFormComponent implements OnInit {\n\n  roles: any;\n  idRole: any;\n\n\n\n\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router: Router,) { }\n\n  ngOnInit(): void {\n    this.getRoles();\n  }\n\n  save(nom: string, prenom: string, email: string , dateAnniversaire: string, idRole :any) {\n\n    this.service.addEleve({nom, prenom, email, dateAnniversaire,idRole} as Persons).subscribe();\n\n  }\n\n  private getRoles() {\n    const response = this.service.getRoles();\n    response.subscribe(role => this.roles = role);\n  }\n}\n","<form xmlns=\"http://www.w3.org/1999/html\">\n<div >\n  <label>Nom</label>\n  <input #nom />\n</div>\n<div >\n  <label>Prenom</label>\n  <input #prenom>\n</div>\n\n<div >\n  <label >Adresse Email</label>\n  <input  type=\"email\" class=\"form-control\" placeholder=\"Email\"  #email/>\n\n</div >\n\n<label >Date de naissance</label>\n<div >\n  <input  class=\"form-control\" type=\"date\"  id=\"example-datetime-local-input\" #date>\n</div>\n<div>\n\n  <form>\n\n    <select [(ngModel)]=\"idRole\"  name=\"roles \">\n\n      <option  *ngFor=\"let role of roles\" [value]=\"role.idRole\" >\n        {{role.name}}\n      </option>\n    </select>\n\n  </form>\n\n</div>\n\n\n<button type=\"button\" class=\"btn btn-success\" (click)=\"save(nom.value,prenom.value,email.value, date.value ,idRole);\">   Sauvegarder</button>\n</form>\n","import {Component, OnInit} from '@angular/core';\r\nimport {RestapiService} from '../restapi.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-eleves-details',\r\n  templateUrl: './persons-resultats.component.html',\r\n  styleUrls: ['./persons-resultats.component.css']\r\n})\r\nexport class PersonsResultatsComponent implements OnInit {\r\n\r\n   person: any;\r\n   resultat : any;\r\n  constructor(private service: RestapiService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n    this.getresultatbyPerson();\r\n  }\r\n\r\n\r\n  getInfo(){\r\n    const id = this.route.snapshot.params.id;\r\n    this.service.getPersonid(id)\r\n      .subscribe(person => this.person = person);\r\n  }\r\n\r\n  getresultatbyPerson(){\r\n    const id = this.route.snapshot.params.id;\r\n    this.service.getResultatByPerson(id)\r\n      .subscribe(resultat => this.resultat = resultat);\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"person\">\r\n  <h1>{{person.nom}} {{person.prenom}}</h1>\r\n  <h2>{{person.dateAnniversaire|date :'dd-LL-yyyy'}}</h2>\r\n\r\n<h2> Tableau des résultat</h2>\r\n\r\n  <table class=\"table table-striped\">\r\n    <thead>\r\n    <th scope=\"col\">#</th>\r\n    <th scope=\"col\">Cours</th>\r\n    <th scope=\"col\">Annee</th>\r\n    <th scope=\"col\">resultat</th>\r\n    <th scope=\"col\"> Réussite </th>\r\n\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngFor=\"let resultat of resultat, index as i\">\r\n    <th scope=\"row\">{{i+1}}</th>\r\n      <td scope=\"row\">{{resultat.nomCours}}</td>\r\n      <td scope=\"row\">{{resultat.annee| date :'yyyy'}}</td>\r\n      <td scope=\"row\">{{resultat.resultat}}</td>\r\n      <td scope=\"row\">{{resultat.reussite}}</td>\r\n\r\n    </tbody>\r\n\r\n  </table>\r\n\r\n\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Persons} from './persons';\n\n@Component({\n  selector: 'app-eleves',\n  templateUrl: './persons.component.html',\n  styleUrls: ['./persons.component.css']\n})\nexport class PersonsComponent implements OnInit {\n\n\n\n   eleve: Persons;\n   roles: any;\n  idRole: String;\n\n\n\n\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router: Router,  ) { }\n\n  ngOnInit(): void {\n    this.getPerson();\n    this.getRoles();\n  }\n  getPerson() {\n    const response = this.service.getPersons();\n    response.subscribe(eleve => this.eleve = eleve);\n  }\n\n\n  private getRoles() {\n    const response = this.service.getRoles();\n    response.subscribe(role => this.roles = role);\n  }\n\n\n  delete(id :any) {\n    this.service.deleteEleve(id).subscribe().add();\n\n  }\n\n  filtrage(idRoles: String) {\n    const response = this.service.getPersonbyRoles(idRoles);\n    response.subscribe(eleve => this.eleve = eleve);\n  }\n}\n","<body>\r\n<button  class=\"btn btn-info\" routerLink=\"../formeleve\"> Ajouter personne</button>\r\n\r\n<form>\r\n  <select  [(ngModel)]=\"idRole\"  name=\"roles \" class=\"form-control form-control-sm\">\r\n    <option  *ngFor=\"let role of roles\" [value]=\"role.idRole\" >\r\n      {{role.name}}\r\n    </option>\r\n  </select>\r\n\r\n</form>\r\n\r\n<button type=\"button\" class=\"btn-secondary\" (click)=\"filtrage(idRole)\"> Filtrer </button>\r\n\r\n<table class=\"table table-striped\">\r\n  <tr>\r\n    <th scope=\"col\">#</th>\r\n    <th scope=\"col\">Nom</th>\r\n    <th scope=\"col\">Prenom</th>\r\n    <th scope=\"col\">Email</th>\r\n    <th scope=\"col\"> Date de naissance</th>\r\n    <th scope=\"col\"> </th>\r\n    <th scope=\"col\"> </th>\r\n    <th scope=\"col\"> </th>\r\n    <th scope=\"col\"> Ajout sur écran </th>\r\n\r\n  </tr>\r\n<tbody>\r\n<tr *ngFor=\"let eleve of eleve, index as i\">\r\n  <th scope=\"row\">{{ i + 1 }}</th>\r\n\r\n\r\n  <td scope=\"row\">{{eleve.nom}}</td>\r\n  <td scope=\"row\">{{eleve.prenom}}</td>\r\n  <td scope=\"row\">{{eleve.email}}</td>\r\n  <td scope=\"row\">{{eleve.dateAnniversaire | date :'dd-LL-yyyy'}}</td>\r\n  <td scope=\"row\">\r\n    <button type=\"button\" class=\"btn btn-info\" routerLink=\"../detailseleve/{{eleve.idPerson}}\"> Détails </button>\r\n  </td>\r\n  <td scope=\"row\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" routerLink=\"../modifier/{{eleve.idPerson}}\"> Modifier </button>\r\n\r\n  </td>\r\n\r\n  <td scope=\"row\">\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete(eleve.idPerson)\"> Supprimer </button>\r\n\r\n  </td>\r\n  <td>\r\n    <form>\r\n      <select  [(ngModel)]=\"idRole\"  name=\"roles \" class=\"form-control form-control-sm\">\r\n        <option  *ngFor=\"let role of roles\" [value]=\"role.idRole\" >\r\n          {{role.name}}\r\n        </option>\r\n      </select>\r\n\r\n    </form>\r\n\r\n    <button type=\"button\" class=\"btn-secondary\" (click)=\"filtrage(idRole)\"> Filtrer </button>\r\n  </td>\r\n</tr>\r\n\r\n\r\n</tbody>\r\n\r\n</table>\r\n\r\n</body>\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Persons} from './persons/persons';\r\nimport {Message} from './messages/message';\r\nimport {Absence} from './absences/absence';\r\nimport {Indisponibilite} from './indisponibilite/Indisponibilite';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestapiService {\r\n\r\n   url : String = \"https://back-end-springboot.herokuapp.com\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public login(username: string, password: string){\r\n\r\n    const headers = new HttpHeaders({Authorization : 'Basic  ' + btoa(username + ':' + password)});\r\n    localStorage.setItem('username', username);\r\n\r\n    let authString = 'Basic ' + btoa(username + ':' + password);\r\n    localStorage.setItem('basicauth', authString);\r\n\r\n    return this.http.get(this.url.concat('/users/login'), {headers});\r\n  }\r\n\r\n  public getPersons(): Observable<Persons>{\r\n\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get<Persons>(this.url.concat('/persons/'), {headers});\r\n  }\r\n  public getCours(){\r\n\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/cours/'), {headers});\r\n  }\r\n\r\n  public getCoursid(id: any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get((this.url.concat('/cours/' +id)), {headers});\r\n  }\r\n\r\n  public getPersonid(id: any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get((this.url.concat('/persons/' +id)), {headers});\r\n  }\r\n\r\n  public  getResultatByPerson(id:any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get((this.url.concat('/resultat/' +id)), {headers});\r\n  }\r\n\r\n  public addEleve(eleve: Persons): Observable<Persons>{\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.post<Persons>( this.url.concat('/eleves') , eleve, {headers});\r\n  }\r\n\r\n  public updateEleve(eleve: Persons, id:any): Observable<Persons>{\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.put<Persons>( this.url.concat(/persons/+id) , eleve, {headers});\r\n  }\r\n  public deleteEleve(id:any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.delete(( this.url.concat(/persons/+id)), {headers});\r\n  }\r\n\r\n  public getMessages(){\r\n\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/messages'), {headers});\r\n  }\r\n\r\n  public addMessage(Message: Message): Observable<Message>{\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.post<Message>( 'http://localhost:8080/messages' , Message, {headers});\r\n  }\r\n\r\n  public deleteMessage(id:any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.delete(('http://localhost:8080/messages/').concat(id), {headers});\r\n  }\r\n\r\n\r\n  public getRoles(){\r\n\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/roles'), {headers});\r\n  }\r\n\r\n  public getPersonbyRoles(id:any) : Observable<Persons>{\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get<Persons>(this.url.concat(/roles/+id), {headers});\r\n  }\r\n\r\n  public updateMessage (message: Message, id:any): Observable<Message> {\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n\r\n    return this.http.put<Message>( this.url.concat(/messages/+id) , message, {headers});\r\n  }\r\n  public getMessageByID(id: any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(( this.url.concat(/messages/+id)), {headers});\r\n  }\r\n\r\n  public getAbsences(){\r\n\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/absences'), {headers});\r\n  }\r\n  public getAbsenceByID(idperson: any,idindispo : any,idspecifique : any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/absences/'+idperson+\"/\"+idindispo+\"/\"+idspecifique), {headers});\r\n  }\r\n\r\n  public updateAbsence (absence: Absence, idperson: any,idindispo : any,idspecifique : any): Observable<Absence> {\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n\r\n    return this.http.put<Absence>( this.url.concat('/absences/'+idperson+\"/\"+idindispo+\"/\"+idspecifique), absence, {headers});\r\n  }\r\n\r\n  public deleteAbsence( idperson: any,idindispo : any,idspecifique : any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.delete(this.url.concat('/absences/'+idperson+\"/\"+idindispo+\"/\"+idspecifique), {headers});\r\n  }\r\n\r\n  public addAbsence(absence: Absence): Observable<Absence>{\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.post<Absence>( this.url.concat('/absences') , absence, {headers});\r\n  }\r\n\r\n  public getIndisponibilite(){\r\n\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/indisponibilite'), {headers});\r\n  }\r\n\r\n  public getIndisponibiliteByID(idPerson: any,idIndispo : any ,idCours :any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/indisponibilite/'+idPerson + \"/\" + idIndispo +\"/\" + idCours), {headers});\r\n  }\r\n\r\n  public updateIndisponibilite (indisponibilite: Indisponibilite, idPerson: any,idIndispo : any ,idCours :any): Observable<Indisponibilite> {\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n\r\n    return this.http.put<Indisponibilite>( this.url.concat('/indisponibilite/'+idPerson + \"/\" + idIndispo +\"/\" + idCours) , indisponibilite, {headers});\r\n  }\r\n\r\n  public deleteindisponibilite(idPerson: any,idIndispo : any ,idCours :any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.delete(this.url.concat('/indisponibilite/'+idPerson + \"/\" + idIndispo +\"/\" + idCours), {headers});\r\n  }\r\n\r\n  public addindisponibilite(indisponibilite: Indisponibilite): Observable<Indisponibilite>{\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.post<Message>( this.url.concat('/indisponilite'), indisponibilite, {headers});\r\n  }\r\n\r\n  public  getResultatByCours(id:any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/resultat/cours/'+id), {headers});\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasicAuthInterceptService implements HttpInterceptor{\n\n  constructor() {\n    }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n    if (localStorage.getItem('username') && localStorage.getItem('basicauth')) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: localStorage.getItem('basicauth')\n        }\n      });\n    }\n    return next.handle(req);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}