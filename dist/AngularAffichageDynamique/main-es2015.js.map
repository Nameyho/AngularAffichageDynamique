{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/absence-form/absence-form.component.ts","./src/app/absence-form/absence-form.component.html","./src/app/absence-update-form/absence-update-form.component.ts","./src/app/absence-update-form/absence-update-form.component.html","./src/app/absences/absences.component.ts","./src/app/absences/absences.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cours-details/cours-details.component.ts","./src/app/cours-details/cours-details.component.html","./src/app/cours/cours.component.ts","./src/app/cours/cours.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/indisponibilite/indisponibilite.component.ts","./src/app/indisponibilite/indisponibilite.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/messages-creation/messages-creation.component.ts","./src/app/messages-creation/messages-creation.component.html","./src/app/messages-modification/messages-modification.component.ts","./src/app/messages-modification/messages-modification.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/persons-details/persons-details.component.ts","./src/app/persons-details/persons-details.component.html","./src/app/persons-form/persons-form.component.ts","./src/app/persons-form/persons-form.component.html","./src/app/persons-resultats/persons-resultats.component.ts","./src/app/persons-resultats/persons-resultats.component.html","./src/app/persons/persons.component.ts","./src/app/persons/persons.component.html","./src/app/restapi.service.ts","./src/app/service/basic-auth-intercept.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICQ5C,6EACE;IAAA,uDACF;IAAA,4DAAS;;;IAF+B,qFAAyB;IAC/D,0DACF;IADE,gHACF;;;IASF,6EACE;IAAA,uDACF;IAAA,4DAAS;;;IAFiC,+FAAmC;IAC3E,0DACF;IADE,2FACF;;ADXG,MAAM,oBAAoB;IAO/B,YAAoB,OAAuB,EAAU,KAAqB,EAAS,MAAe;QAA9E,YAAO,GAAP,OAAO,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAS;IAAI,CAAC;IAEvG,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAEM,aAAa;QAClB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;aACtB,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC;IAChD,CAAC;IAEM,eAAe;QACpB,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE;aAC9B,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC;IACnD,CAAC;IAED,IAAI,CAAC,QAAgB,EAAE,UAAkB,EAAE,SAAiB,EAAE,OAAe;QAC3E,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAC,QAAQ,EAAC,UAAU,EAAC,SAAS,EAAC,OAAO,EAAW,CAAC,CAAC,SAAS,EAAE;IACxF,CAAC;;wFA3BU,oBAAoB;oGAApB,oBAAoB;;QCVjC,qEAAK;QAAA,0EAAc;QAAA,4DAAK;QAGxB,qEAAI;QAAA,2EAAgB;QAAA,4DAAK;QACvB,0EACE;QAAA,wEAAO;QAAA,2EAAgB;QAAA,4DAAQ;QAC/B,+EAEE;QAFwB,2LAAsB;QAE9C,sHACE;QAEJ,4DAAS;QACX,4DAAO;QAET,sEAAK;QAAA,4EAAe;QAAA,4DAAK;QACzB,wEAEE;QAAA,gFAEE;QAFM,6LAAwB;QAE9B,wHACE;QAEJ,4DAAS;QACX,4DAAO;QACP,iEACA;QAAA,yEAAQ;QAAA,2EAAU;QAAA,4DAAQ;QAC1B,uEACE;QAAA,0EACF;QAAA,4DAAM;QACN,uEACE;QAAA,yEAAQ;QAAA,uEAAW;QAAA,4DAAQ;QAC3B,uEACE;QAAA,0EACF;QAAA,4DAAM;QACN,uEACE;QAAA,6EAAwI;QAA1F,0fAAS,oDAA2E,IAAE;QAAI,wEAAW;QAAA,4DAAS;QAD9J,4DACE;QANJ,4DACE;;QAxB4B,0DAAsB;QAAtB,iFAAsB;QAErC,0DAA8B;QAA9B,gFAA8B;QASnC,0DAAwB;QAAxB,kFAAwB;QAErB,0DAAgC;QAAhC,iFAAgC;;6FDThC,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICQ9C,6EACE;IAAA,uDACF;IAAA,4DAAS;;;IAF+B,qFAAyB;IAC/D,0DACF;IADE,gHACF;;;IAQA,6EACE;IAAA,uDACF;IAAA,4DAAS;;;IAFiC,+FAAmC;IAC3E,0DACF;IADE,2FACF;;ADVG,MAAM,0BAA0B;IAKrC,YAAoB,OAAuB,EAAU,KAAqB,EAAS,MAAe;QAA9E,YAAO,GAAP,OAAO,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAS;IAAI,CAAC;IAEvG,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,OAAO;QACb,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QAClD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QAChD,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QACpD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAC,UAAU,EAAC,YAAY,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAE,OAAO,GAAG,OAAO,CAAC,CAAC;IAC9G,CAAC;IAEM,aAAa;QAClB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;aACtB,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC;IAChD,CAAC;IAEM,eAAe;QACpB,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE;aAC9B,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC;IACnD,CAAC;IAED,MAAM,CAAC,QAAa,EAAE,UAAe,EAAE,SAAc,EAAE,OAAY;QAEnE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAC,QAAQ,EAAC,UAAU,EAAC,SAAS,EAAC,OAAO,EAAY,EAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;IACxL,CAAC;;oGAjCU,0BAA0B;0GAA1B,0BAA0B;;QCVvC,qEAAK;QAAA,iFAAqB;QAAA,4DAAK;QAG/B,qEAAI;QAAA,2EAAgB;QAAA,4DAAK;QACzB,0EACE;QAAA,wEAAO;QAAA,2EAAgB;QAAA,4DAAQ;QAC/B,+EAEE;QAAA,4HACE;QAEJ,4DAAS;QACX,4DAAO;QAGP,wEACE;QAAA,yEAAO;QAAA,4EAAgB;QAAA,4DAAQ;QAC/B,gFACE;QAAA,8HACE;QAEJ,4DAAS;QACX,4DAAO;QACP,iEACA;QAAA,yEAAQ;QAAA,2EAAU;QAAA,4DAAQ;QAC1B,uEACE;QAAA,0EACF;;QAAA,4DAAM;QACN,uEACE;QAAA,yEAAQ;QAAA,uEAAW;QAAA,4DAAQ;QAC3B,uEACE;QAAA,0EACF;;QAAA,4DAAM;QACN,uEACE;QAAA,6EAA0I;QAA5F,ggBAAS,sDAA6E,IAAE;QAAI,wEAAW;QAAA,4DAAS;QADhK,4DACE;QANJ,4DACE;;QAvBkB,0DAA6B;QAA7B,sHAA6B;QAEpC,0DAA8B;QAA9B,gFAA8B;QASxB,0DAA+B;QAA/B,wHAA+B;QACrC,0DAAgC;QAAhC,iFAAgC;QAQF,0DAAoD;QAApD,uMAAoD;QAKlD,0DAAkD;QAAlD,qMAAkD;;6FDrBlF,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;;;;;;;ICiB9C,qEACE;IAAA,wEAAgB;IAAA,uDAAW;IAAA,4DAAK;IAGhC,wEAAgB;IAAA,uDAA+C;IAAA,4DAAK;IACpE,wEAAgB;IAAA,uDAAsB;IAAA,4DAAK;IAC3C,wEAAgB;IAAA,uDAA2C;;IAAA,4DAAK;IAChE,yEAAgB;IAAA,wDAAwC;;IAAA,4DAAK;IAC7D,yEACE;IAAA,6EAA0J;IAAA,sEAAS;IAAA,4DAAS;IAE9K,4DAAK;IAEL,yEACE;IAAA,6EAAyH;IAA5E,wZAA0E;IAAE,uEAAU;IAAA,4DAAS;IAE9I,4DAAK;IACP,4DAAK;;;;IAhBa,0DAAW;IAAX,yEAAW;IAGX,0DAA+C;IAA/C,4HAA+C;IAC/C,0DAAsB;IAAtB,sFAAsB;IACtB,0DAA2C;IAA3C,oKAA2C;IAC3C,0DAAwC;IAAxC,oKAAwC;IAEN,0DAAwG;IAAxG,gMAAwG;;ADjBvJ,MAAM,iBAAiB;IAG5B,YAAoB,OAAuB,EAAU,KAAqB,EAAS,MAAc;QAA7E,YAAO,GAAP,OAAO,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEtG,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAC5C,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;IACxD,CAAC;IAED,MAAM,CAAC,UAAe,EAAE,QAAa,EAAE,YAAiB;QAC1D,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,EAAC,UAAU,EAAC,YAAY,CAAC,CAAC,SAAS,EAAE;IACtE,CAAC;;kFAhBU,iBAAiB;iGAAjB,iBAAiB;QCT9B,qEAAK;QAAA,8EAAkB;QAAA,4DAAK;QAE5B,4EAA+D;QAAA,2EAAe;QAAA,4DAAS;QAEvF,2EACE;QAAA,wEACA;QAAA,qEACE;QAAA,wEAAgB;QAAA,4DAAC;QAAA,4DAAK;QACtB,wEAAgB;QAAA,oEAAQ;QAAA,4DAAK;QAC7B,yEAAgB;QAAA,wEAAY;QAAA,4DAAK;QACjC,yEAAgB;QAAA,8EAAa;QAAA,4DAAK;QAClC,yEAAiB;QAAA,wEAAW;QAAA,4DAAK;QACjC,oEAAsB;QACtB,oEAAsB;QACxB,4DAAK;QACL,4DAAQ;QACR,yEACA;QAAA,+GACE;QAiBF,4DAAQ;QACR,4DAAQ;;QAnBJ,2DAA2C;QAA3C,gFAA2C;;6FDRpC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACc;AACE;AACH;AACG;AACuB;AACjB;AACG;AACA;AAC0B;AACN;AACM;AACf;AAC2B;AAC3B;AACoB;;;AAG/F,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;IACjD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa;QACvC,QAAQ,EAAE;YACR,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;YAC1C,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,4FAAqB,EAAC;YAC5D,EAAC,IAAI,EAAG,kBAAkB,EAAE,SAAS,EAAE,wGAAyB,EAAC;YACjE,EAAC,IAAI,EAAG,QAAQ,EAAE,SAAS,EAAG,2EAAgB,EAAC;YAC/C,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,mGAAuB,EAAC;YAC1D,EAAC,IAAI,EAAG,UAAU,EAAE,SAAS,EAAG,8EAAiB,EAAC;YAClD,EAAC,IAAI,EAAG,UAAU,EAAE,SAAS,EAAG,8EAAiB,EAAC;YAClD,EAAC,IAAI,EAAG,iBAAiB,EAAE,SAAS,EAAG,yGAAyB,EAAC;YACjE,EAAC,IAAI,EAAG,WAAW,EAAE,SAAS,EAAE,0FAAoB,EAAC;YACrD,EAAC,IAAI,EAAG,yBAAyB,EAAE,SAAS,EAAG,qHAA6B,EAAC;YAC7E,EAAC,IAAI,EAAG,iBAAiB,EAAE,SAAS,EAAG,0FAAoB,EAAC;YAC5D,EAAC,IAAI,EAAG,oCAAoC,EAAE,SAAS,EAAG,8GAA0B,EAAC;SACtF,EAAC;CAGH,CAAC;AAOK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAJlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAGX,gBAAgB,uFAHjB,4DAAY;6FAGX,gBAAgB;cAL5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC3CD;AAAA;AAAA;AAAA;AAAwC;;;AAOjC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,2BAA2B,CAAC;KACrC;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACjB;AAEM;AACU;AACH;AACE;AACX;AAC8B;AACQ;AAC1B;AACuB;AACjB;AACgB;AACb;AACA;AACX;AACqC;AACN;AACQ;AACvD;AACwC;AAC2B;AAC3B;AACU;AACU;;AAwC1F,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAPT;QACT;YACE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,+FAAyB,EAAE,KAAK,EAAE,IAAI;SAC7E;KACF,YAfQ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;YAChB,6FAAuB;YACvB,qEAAS;YACT,qDAAY;SAEf;mIASY,SAAS,mBAnClB,2DAAY;QACZ,qEAAc;QACd,kEAAa;QACb,qEAAc;QACd,6FAAqB;QACrB,4EAAgB;QAChB,+EAAiB;QACjB,+EAAiB;QACjB,yGAAyB;QACzB,mGAAuB;QACvB,yGAAyB;QACzB,0FAAoB;QACpB,qHAA6B;QAC7B,0FAAoB;QACpB,oGAAwB;QACxB,8GAA0B,aAG1B,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,qEAAgB;QAChB,6FAAuB;QACvB,qEAAS;QACT,qDAAY;6FAWH,SAAS;cArCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,kEAAa;oBACb,qEAAc;oBACd,6FAAqB;oBACrB,4EAAgB;oBAChB,+EAAiB;oBACjB,+EAAiB;oBACjB,yGAAyB;oBACzB,mGAAuB;oBACvB,yGAAyB;oBACzB,0FAAoB;oBACpB,qHAA6B;oBAC7B,0FAAoB;oBACpB,oGAAwB;oBACxB,8GAA0B;iBAC3B;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,qEAAgB;oBAChB,6FAAuB;oBACvB,qEAAS;oBACT,qDAAY;iBAEf;gBAEC,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,+FAAyB,EAAE,KAAK,EAAE,IAAI;qBAC7E;iBACF;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AChED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;;;;;;ICGhD,sEACE;IAAA,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACzB,4DAAM;;;IADA,0DAAc;IAAd,kFAAc;;;IAelB,qEACE;IAAA,wEAAgB;IAAA,uDAAO;IAAA,4DAAK;IAC5B,wEAAgB;IAAA,uDAAsB;IAAA,4DAAK;IAC3C,wEAAgB;IAAA,uDAAyB;IAAA,4DAAK;IAC9C,wEAAgB;IAAA,uDAAqB;IAAA,4DAAK;IAC1C,wEAAgB;IAAA,wDAAqB;IAAA,4DAAK;IAE5C,4DAAQ;;;;IANU,0DAAO;IAAP,yEAAO;IACP,0DAAsB;IAAtB,sFAAsB;IACtB,0DAAyB;IAAzB,yFAAyB;IACzB,0DAAqB;IAArB,qFAAqB;IACrB,0DAAqB;IAArB,qFAAqB;;ADflC,MAAM,qBAAqB;IAIhC,YAAoB,OAAuB,EAAU,KAAqB;QAAtD,YAAO,GAAP,OAAO,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;IAAM,CAAC;IAEjF,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,OAAO;QACL,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;aACxB,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED,iBAAiB;QACf,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,CAAC;aAChC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;IACrD,CAAC;;0FArBU,qBAAqB;qGAArB,qBAAqB;QCNlC,iHACE;QAGF,qEAAK;QAAA,qFAAoB;QAAA,4DAAK;QAE9B,2EACE;QAAA,wEACA;QAAA,wEAAgB;QAAA,4DAAC;QAAA,4DAAK;QACtB,wEAAgB;QAAA,8DAAG;QAAA,4DAAK;QACxB,wEAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,yEAAgB;QAAA,oEAAQ;QAAA,4DAAK;QAC7B,yEAAiB;QAAA,2EAAS;QAAA,4DAAK;QAE/B,4DAAQ;QACR,yEACA;QAAA,kHACE;QAFF,4DACA;QASF,4DAAQ;;QAzBH,2EAAa;QAgBZ,2DAA6C;QAA7C,iFAA6C;;6FDVtC,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;;;;;;ICuB5C,qEACE;IAAA,wEAAgB;IAAA,uDAAW;IAAA,4DAAK;IAChC,wEAAgB;IAAA,uDAAe;IAAA,4DAAK;IACpC,wEAAgB;IAAA,uDAAwC;;IAAA,4DAAK;IAC7D,wEAAgB;IAAA,uDAAsC;;IAAA,4DAAK;IAC3D,yEACA;IAAA,6EAA+F;IAAA,yEAAO;IAAA,4DAAS;IAE/G,4DAAK;IAEP,4DAAK;;;;IATa,0DAAW;IAAX,yEAAW;IACX,0DAAe;IAAf,wGAAe;IACf,0DAAwC;IAAxC,4LAAwC;IACxC,0DAAsC;IAAtC,2LAAsC;IAER,0DAA+C;IAA/C,sJAA+C;;ADrB5F,MAAM,cAAc;IAOzB,YAAoB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAH3C,qBAAgB,GAAG,CAAC,MAAM,CAAC,CAAC;IAGmB,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IACD,QAAQ;QACN,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACzC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;IAGhD,CAAC;;4EAjBU,cAAc;8FAAd,cAAc;QCR3B,uEACE;QAAA,wEAAO;QAAA,8EAAmB;QAAA,4DAAQ;QAGpC,4DAAO;QAEP,4EAA+F;QAAA,yEAAa;QAAA,4DAAS;QAInH,2EACE;QAAA,wEACA;QAAA,qEACE;QAAA,wEAAgB;QAAA,4DAAC;QAAA,4DAAK;QACtB,yEAAgC;QAAA,gEAAI;QAAA,4DAAK;QACzC,yEAAsC;QAAA,4EAAU;QAAA,4DAAK;QACrD,yEAAoC;QAAA,qEAAQ;QAAA,4DAAK;QACjD,yEAAkB;QAAA,yEAAO;QAAA,4DAAK;QAC9B,oEAAuB;QAEzB,4DAAK;QACL,4DAAQ;QACR,yEACA;QAAA,4GACE;QAWF,4DAAQ;QACV,4DAAQ;;QA9BoC,0DAA+C;QAA/C,wJAA+C;QAiBrF,2DAAuC;QAAvC,8EAAuC;;6FDflC,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;;;;;;;;;AASzC,MAAM,aAAa;IAGxB,YAAoB,OAAuB,EAAU,MAAc;QAA/C,YAAO,GAAP,OAAO,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAExE,QAAQ;IACR,CAAC;IAGD,QAAQ;QACN,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;;0EAZU,aAAa;6FAAb,aAAa;QCR1B,0EAEA;QAAA,uEACE;QAAA,wEAAO;QAAA,8EAAmB;QAAA,4DAAQ;QAClC,qEACA;QAAA,qEACF;QAAA,4DAAO;QAEP,uEACA;QAAA,2EACE;QAAA,wEACF;QAAA,6EAAwD;QAAA,kEAAK;QAAA,4DAAS;QACpE,4DAAK;QACL,6EAA0D;QAAA,qEAAQ;QAAA,4DAAS;QAC3E,6EAA2D;QAAA,qEAAQ;QAAA,4DAAS;QAC5E,6EAAuD;QAAA,oEAAO;QAAA,4DAAS;QAEvE,6EAAkD;QAAtB,sIAAS,cAAU,IAAC;QAAE,8EAAa;QAAA,4DAAS;QAK1E,4DAAK;QACL,4EAA+B;QAI/B,4DAAO;QAEP,4DAAO;;QAlBsB,2DAAyB;QAAzB,6IAAyB;QAExB,0DAA2B;QAA3B,6IAA2B;QAC3B,0DAA2B;QAA3B,6IAA2B;QAC5B,0DAAyB;QAAzB,6IAAyB;;6FDPzC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,wBAAwB;IAEnC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gGALU,wBAAwB;wGAAxB,wBAAwB;QCPrC,oEAAG;QAAA,iFAAsB;QAAA,4DAAI;;6FDOhB,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;;;;;AASzC,MAAM,cAAc;IAMzB,YAAoB,OAAuB,EAAU,MAAc;QAA/C,YAAO,GAAP,OAAO,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAExE,QAAQ;IACR,CAAC;IAED,OAAO;QACN,MAAM,IAAI,GAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpB,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE;YAChF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;;4EAjBU,cAAc;8FAAd,cAAc;QCT3B,yEACE;QAAA,oEAA8B;QAChC,4DAAM;QAEN,0EACE;QAAA,wEAAmB;QAAA,8EAAmB;QAAA,4DAAK;QAC3C,yEACE;QAAA,oEACE;QAAA,2EACF;QADqC,oLAAsB;QAAzD,4DACF;QAAA,4DAAI;QACJ,oEACE;QAAA,2EACF;QADyC,oLAAsB;QAA7D,4DACF;QAAA,4DAAI;QACN,4DAAM;QACN,wEACE;QAAA,4EACF;QAD0D,sIAAS,aAAS,IAAC;QAA3E,4DACF;QAAA,4DAAI;QACN,4DAAO;;QATkC,0DAAsB;QAAtB,iFAAsB;QAGlB,0DAAsB;QAAtB,iFAAsB;;6FDFtD,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAa3C,MAAM,yBAAyB;IAIpC,YAAoB,OAAuB,EAAU,KAAqB,EAAS,MAAc;QAA7E,YAAO,GAAP,OAAO,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAK,CAAC;IAEvG,QAAQ;IACR,CAAC;IAED,OAAO;QACL,IAAG,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,SAAS,IAAI,IAAI,CAAC,YAAY,IAAG,SAAS,CAAC,EAAC;YAE/D,MAAM,OAAO,GAAE,IAAI,CAAC,OAAO,CAAC;YAC5B,MAAM,YAAY,GAAE,IAAI,CAAC,YAAY,CAAC;YACtC,MAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACnD,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;YAG1C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAC,OAAO,EAAC,YAAY,EAAE,WAAW,EAAE,SAAS,EAAY,CAAC,CAAC,SAAS,EAAE,CAAC;SAChG;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC7C,CAAC;;kGAxBU,yBAAyB;yGAAzB,yBAAyB;QCbtC,qEAAK;QAAA,oFAAmB;QAAA,4DAAK;QAE7B,qEAAK;QAAA,4EAAgB;QAAA,4DAAK;QAC1B,2EACA;QADO,mMAA0B;QAAjC,4DACA;QAAA,qEAAK;QAAA,6EAAiB;QAAA,4DAAK;QAC3B,6EAAwE;QAA/D,gMAAqB;QAAgC,4DAAU;QAExE,4EAAmE;QAArB,iJAAS,aAAS,IAAC;QAAE,wEAAY;QAAA,4DAAS;QACxF,6EAAkE;QAArB,kJAAS,aAAS,IAAC;QAAE,qEAAQ;QAAA,4DAAS;;QAL5E,0DAA0B;QAA1B,qFAA0B;QAExB,0DAAqB;QAArB,gFAAqB;;6FDQjB,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;;;;;;AAWhD,MAAM,6BAA6B;IACxC,YAAoB,OAAuB,EAAU,KAAqB,EAAS,MAAe;QAA9E,YAAO,GAAP,OAAO,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAS;IAAI,CAAC;IAKvG,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IAEjB,CAAC;IAED,OAAO;QACL,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,CAAC;aAC5B,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;IAElD,CAAC;IAED,MAAM,CAAC,YAAoB,EAAE,OAAe;QAExC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAGzC,MAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACnD,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;QAG1C,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAC,OAAO,EAAC,YAAY,EAAE,WAAW,EAAE,SAAS,EAAY,EAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;QAExG,2CAA2C;IAC5C,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC5C,CAAC;;0GAlCU,6BAA6B;6GAA7B,6BAA6B;QCX1C,qEAAK;QAAA,iFAAqB;QAAA,4DAAK;QAE/B,qEAAK;QAAA,4EAAgB;QAAA,4DAAK;QAC1B,sEACA;QAAA,qEAAK;QAAA,6EAAiB;QAAA,4DAAK;QAC3B,wEAAkF;QAElF,4EAAsG;QAAxD,qJAAS,yDAA4C,IAAC;QAAE,wEAAY;QAAA,4DAAS;QAC3H,6EAAiE;QAApB,sJAAS,YAAQ,IAAC;QAAE,qEAAQ;QAAA,4DAAS;;QALzC,0DAAsC;QAAtC,4GAAsC;QAAxE,0HAAiC;QAEF,0DAAiC;QAAjC,uGAAiC;QAA9D,qHAA4B;;6FDMxB,6BAA6B;cALzC,uDAAS;eAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,WAAW,EAAE,wCAAwC;gBACrD,SAAS,EAAE,CAAC,uCAAuC,CAAC;aACrD;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;;;;;;;ICkB9C,qEACE;IAAA,wEAAgB;IAAA,uDAAW;IAAA,4DAAK;IAGhC,wEAAgB;IAAA,uDAAwB;IAAA,4DAAK;IAC7C,wEAAgB;IAAA,uDAA4C;;IAAA,4DAAK;IACjE,wEAAgB;IAAA,uDAAsB;IAAA,4DAAK;IAC3C,yEACE;IAAA,6EAA2G;IAAA,sEAAS;IAAA,4DAAS;IAE/H,4DAAK;IACL,yEAEE;IAAA,6EAAkF;IAArC,yWAAmC;IAAE,uEAAU;IAAA,4DAAS;IAEvG,4DAAK;IACP,4DAAK;;;;IAfa,0DAAW;IAAX,yEAAW;IAGX,0DAAwB;IAAxB,wFAAwB;IACxB,0DAA4C;IAA5C,sKAA4C;IAC5C,0DAAsB;IAAtB,qFAAsB;IAEY,0DAAyD;IAAzD,uIAAyD;;ADjBxG,MAAM,iBAAiB;IAE5B,YAAoB,OAAuB,EAAU,KAAqB,EAAS,MAAc;QAA7E,YAAO,GAAP,OAAO,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAM,CAAC;IAIxG,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IAED,WAAW;QACT,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAC5C,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC;IACzD,CAAC;IAED,MAAM,CAAC,QAAa;QAClB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QAGrB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;IACnD,CAAC;;kFApBU,iBAAiB;iGAAjB,iBAAiB;QCT9B,qEAAI;QAAA,6EAAkB;QAAA,4DAAK;QAC3B,4EAA4E;QAAA,4EAAgB;QAAA,4DAAS;QACrG,uEACA;QAAA,2EACE;QAAA,qEACE;QAAA,wEAAgB;QAAA,4DAAC;QAAA,4DAAK;QACtB,wEAAgB;QAAA,yEAAa;QAAA,4DAAK;QAClC,yEAAgB;QAAA,iFAAgB;QAAA,4DAAK;QACrC,yEAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,oEAAsB;QACtB,oEAAsB;QACxB,4DAAK;QAEL,oEAEQ;QAER,yEACA;QAAA,8GACE;QAkBJ,4DAAQ;QAlCR,4DACE;QAmCF,4DAAO;;QArBD,2DAA4C;QAA5C,iFAA4C;;6FDTrC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,uBAAuB;IAElC,YAAoB,OAAuB,EAAU,KAAqB,EAAS,MAAe;QAA9E,YAAO,GAAP,OAAO,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAS;IAAI,CAAC;IAGvG,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IAEjB,CAAC;IAED,OAAO;QACL,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC;aACzB,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,CAAC,GAAW,EAAE,MAAc,EAAE,KAAa,EAAG,gBAAwB;QAC1E,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAY,EAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;QAC3F,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IAC1C,CAAC;;8FAxBU,uBAAuB;uGAAvB,uBAAuB;;QCVpC,sEACE;QAAA,wEAAO;QAAA,8DAAG;QAAA,4DAAQ;QAClB,yEACF;QAAA,4DAAM;QACN,sEACE;QAAA,wEAAO;QAAA,iEAAM;QAAA,4DAAQ;QACrB,yEACF;QAAA,4DAAM;QAEN,uEACE;QAAA,yEAAQ;QAAA,yEAAa;QAAA,4DAAQ;QAC7B,0EAEF;QAAA,4DAAO;QAEP,yEAAQ;QAAA,6EAAiB;QAAA,4DAAQ;QAEjC,uEACE;QAAA,0EACF;;QAAA,4DAAM;QAGN,6EAAkI;QAApF,qfAAS,sDAAuD,qBAAa,EAAE,IAAC;QAAI,wEAAW;QAAA,4DAAS;QACtJ,6EAAmE;QAAtB,gJAAS,YAAQ,IAAC;QAAI,qEAAQ;QAAA,4DAAS;;QArB9C,0DAA6B;QAA7B,8HAA6B;QAArD,mFAAsB;QAIO,0DAAgC;QAAhC,iIAAgC;QAA1D,sFAAyB;QAK4B,0DAA+B;QAA/B,gIAA+B;QAA1F,qFAAwB;QAOQ,0DAA0D;QAA1D,4MAA0D;;6FDRxF,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;IC0B5C,6EACE;IAAA,uDACF;IAAA,4DAAS;;;IAF2B,iFAAqB;IACvD,0DACF;IADE,wFACF;;ADlBC,MAAM,oBAAoB;IAQ/B,YAAoB,OAAuB,EAAU,KAAqB,EAAS,MAAc;QAA7E,YAAO,GAAP,OAAO,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAK,CAAC;IAEvG,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,IAAI,CAAC,GAAW,EAAE,MAAc,EAAE,KAAa,EAAG,gBAAwB,EAAE,MAAW;QAErF,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAC,MAAM,EAAY,CAAC,CAAC,SAAS,EAAE,CAAC;IAE9F,CAAC;IAEO,QAAQ;QACd,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACzC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;IAChD,CAAC;;wFAvBU,oBAAoB;oGAApB,oBAAoB;;QCVjC,0EACA;QAAA,sEACE;QAAA,wEAAO;QAAA,8DAAG;QAAA,4DAAQ;QAClB,4EACF;QAAA,4DAAM;QACN,sEACE;QAAA,wEAAO;QAAA,iEAAM;QAAA,4DAAQ;QACrB,4EACF;QAAA,4DAAM;QAEN,uEACE;QAAA,yEAAQ;QAAA,yEAAa;QAAA,4DAAQ;QAC7B,0EAEF;QAAA,4DAAO;QAEP,yEAAQ;QAAA,6EAAiB;QAAA,4DAAQ;QACjC,uEACE;QAAA,0EACF;QAAA,4DAAM;QACN,uEAEE;QAAA,wEAEE;QAAA,6EAEE;QAFM,0LAAoB;QAE1B,wHACE;QAEJ,4DAAS;QAEX,4DAAO;QAET,4DAAM;QAGN,6EAAyH;QAA3E,0fAAS,gEAA4D,IAAE;QAAI,wEAAW;QAAA,4DAAS;QAC7I,4DAAO;;QAbK,2DAAoB;QAApB,+EAAoB;QAEjB,0DAA0B;QAA1B,8EAA0B;;6FDhB5B,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;;;;;;ICgB5C,qEACA;IAAA,wEAAgB;IAAA,uDAAO;IAAA,4DAAK;IAC1B,wEAAgB;IAAA,uDAAqB;IAAA,4DAAK;IAC1C,wEAAgB;IAAA,uDAAgC;;IAAA,4DAAK;IACrD,wEAAgB;IAAA,uDAAqB;IAAA,4DAAK;IAC1C,yEAAgB;IAAA,wDAAqB;IAAA,4DAAK;IAE5C,4DAAQ;;;;IANQ,0DAAO;IAAP,yEAAO;IACL,0DAAqB;IAArB,qFAAqB;IACrB,0DAAgC;IAAhC,2JAAgC;IAChC,0DAAqB;IAArB,qFAAqB;IACrB,0DAAqB;IAArB,qFAAqB;;;IArB3C,sEACE;IAAA,qEAAI;IAAA,uDAAgC;IAAA,4DAAK;IACzC,qEAAI;IAAA,uDAA8C;;IAAA,4DAAK;IAEzD,qEAAK;IAAA,qFAAoB;IAAA,4DAAK;IAE5B,2EACE;IAAA,wEACA;IAAA,yEAAgB;IAAA,6DAAC;IAAA,4DAAK;IACtB,yEAAgB;IAAA,iEAAK;IAAA,4DAAK;IAC1B,yEAAgB;IAAA,iEAAK;IAAA,4DAAK;IAC1B,yEAAgB;IAAA,oEAAQ;IAAA,4DAAK;IAC7B,yEAAiB;IAAA,2EAAS;IAAA,4DAAK;IAE/B,4DAAQ;IACR,yEACA;IAAA,4HACA;IAFA,4DACA;IASF,4DAAQ;IAGV,4DAAM;;;IA3BA,0DAAgC;IAAhC,sHAAgC;IAChC,0DAA8C;IAA9C,8KAA8C;IAc5C,2DAA6C;IAA7C,oFAA6C;;ADP9C,MAAM,yBAAyB;IAIpC,YAAoB,OAAuB,EAAU,KAAqB;QAAtD,YAAO,GAAP,OAAO,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAE/E,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAGD,OAAO;QACL,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC;aACzB,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED,mBAAmB;QACjB,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,EAAE,CAAC;aACjC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;IACrD,CAAC;;kGAtBU,yBAAyB;yGAAzB,yBAAyB;QCTtC,sHACE;;QADG,4EAAc;;6FDSN,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;;;;;;;ICK5C,4EACE;IAAA,uDACF;IAAA,4DAAS;;;IAF2B,iFAAqB;IACvD,0DACF;IADE,wFACF;;;IA4CI,4EACE;IAAA,uDACF;IAAA,4DAAS;;;IAF2B,iFAAqB;IACvD,0DACF;IADE,wFACF;;;;IAzBR,qEACE;IAAA,wEAAgB;IAAA,uDAAW;IAAA,4DAAK;IAGhC,wEAAgB;IAAA,uDAAa;IAAA,4DAAK;IAClC,wEAAgB;IAAA,uDAAgB;IAAA,4DAAK;IACrC,wEAAgB;IAAA,uDAAe;IAAA,4DAAK;IACpC,wEAAgB;IAAA,wDAA+C;;IAAA,4DAAK;IACpE,yEACE;IAAA,6EAA4F;IAAA,0EAAQ;IAAA,4DAAS;IAC/G,4DAAK;IACL,yEACE;IAAA,8EAA6F;IAAA,sEAAS;IAAA,4DAAS;IAEjH,4DAAK;IAEL,yEACE;IAAA,8EAA+E;IAAlC,mWAAgC;IAAE,uEAAU;IAAA,4DAAS;IAEpG,4DAAK;IACL,sEACE;IAAA,wEACE;IAAA,6EACE;IADO,+UAAoB;IAC3B,0HACE;IAEJ,4DAAS;IAEX,4DAAO;IAEP,6EAAwE;IAA5B,oUAA0B;IAAE,qEAAQ;IAAA,4DAAS;IAC3F,4DAAK;IACP,4DAAK;;;;;IA/Ba,0DAAW;IAAX,yEAAW;IAGX,0DAAa;IAAb,6EAAa;IACb,0DAAgB;IAAhB,gFAAgB;IAChB,0DAAe;IAAf,+EAAe;IACf,0DAA+C;IAA/C,0KAA+C;IAElB,0DAA+C;IAA/C,6HAA+C;IAG1C,0DAA2C;IAA3C,yHAA2C;IAUhF,0DAAoB;IAApB,kFAAoB;IAClB,0DAA0B;IAA1B,iFAA0B;;ADzCpC,MAAM,gBAAgB;IAW3B,YAAoB,OAAuB,EAAU,KAAqB,EAAS,MAAc;QAA7E,YAAO,GAAP,OAAO,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAO,CAAC;IAEzG,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IACD,SAAS;QACP,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QAC3C,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;IAClD,CAAC;IAGO,QAAQ;QACd,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACzC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;IAChD,CAAC;IAGD,MAAM,CAAC,EAAO;QACZ,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,CAAC;IAEjD,CAAC;IAED,QAAQ,CAAC,OAAe;QACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QACxD,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;IAClD,CAAC;;gFArCU,gBAAgB;gGAAhB,gBAAgB;QCV7B,uEACA;QAAA,4EAAyD;QAAA,4EAAgB;QAAA,4DAAS;QAElF,uEACE;QAAA,4EACE;QADO,qLAAoB;QAC3B,kHACE;QAEJ,4DAAS;QAEX,4DAAO;QAEP,4EAAwE;QAA5B,wIAAS,wBAAgB,IAAC;QAAE,oEAAQ;QAAA,4DAAS;QAEzF,2EACE;QAAA,qEACE;QAAA,yEAAgB;QAAA,6DAAC;QAAA,4DAAK;QACtB,yEAAgB;QAAA,+DAAG;QAAA,4DAAK;QACxB,yEAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,yEAAgB;QAAA,iEAAK;QAAA,4DAAK;QAC1B,yEAAiB;QAAA,8EAAiB;QAAA,4DAAK;QACvC,oEAAsB;QACtB,oEAAsB;QACtB,oEAAsB;QACtB,yEAAiB;QAAA,kFAAgB;QAAA,4DAAK;QAExC,4DAAK;QACP,yEACA;QAAA,8GACE;QAkCF,4DAAQ;QAER,4DAAQ;QAER,4DAAO;;QA/DI,0DAAoB;QAApB,+EAAoB;QAClB,0DAA0B;QAA1B,8EAA0B;QAuBnC,2DAAuC;QAAvC,8EAAuC;;6FDlB9B,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAyC;AACoB;;;AAgBtD,MAAM,cAAc;IAIzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnC,QAAG,GAAY,2CAA2C,CAAC;IAEpB,CAAC;IAElC,KAAK,CAAC,QAAgB,EAAE,QAAgB;QAE7C,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,aAAa,EAAG,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAC,CAAC,CAAC;QAC/F,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAE3C,IAAI,UAAU,GAAG,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC;QAC5D,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;QAE9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACnE,CAAC;IAEM,UAAU;QAEf,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACzE,CAAC;IACM,QAAQ;QAEb,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IAC9D,CAAC;IAEM,UAAU,CAAC,EAAO;QACvB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,GAAE,EAAE,CAAC,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACpE,CAAC;IAEM,WAAW,CAAC,EAAO;QACxB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,GAAE,EAAE,CAAC,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACtE,CAAC;IAEO,mBAAmB,CAAC,EAAM;QAChC,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,GAAE,EAAE,CAAC,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACvE,CAAC;IAEM,QAAQ,CAAC,KAAc;QAC5B,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,EAAG,KAAK,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACjF,CAAC;IAEM,WAAW,CAAC,KAAc,EAAE,EAAM;QACvC,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,GAAC,EAAE,CAAC,EAAG,KAAK,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACnF,CAAC;IACM,WAAW,CAAC,EAAM;QACvB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,GAAC,EAAE,CAAC,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACvE,CAAC;IAEM,WAAW;QAEhB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IAChE,CAAC;IAEM,UAAU,CAAC,OAAgB;QAChC,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,gCAAgC,EAAG,OAAO,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACzF,CAAC;IAEM,aAAa,CAAC,EAAM;QACzB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,iCAAiC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACrF,CAAC;IAGM,QAAQ;QAEb,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IAC7D,CAAC;IAEM,gBAAgB,CAAC,EAAM;QAC5B,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,GAAC,EAAE,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACxE,CAAC;IAEM,aAAa,CAAE,OAAgB,EAAE,EAAM;QAC5C,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QAEtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,GAAC,EAAE,CAAC,EAAG,OAAO,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACtF,CAAC;IACM,cAAc,CAAC,EAAO;QAC3B,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,GAAC,EAAE,CAAC,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACrE,CAAC;IAEM,WAAW;QAEhB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IAChE,CAAC;IACM,cAAc,CAAC,QAAa,EAAC,SAAe,EAAC,YAAkB;QACpE,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,GAAC,QAAQ,GAAC,GAAG,GAAC,SAAS,GAAC,GAAG,GAAC,YAAY,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACzG,CAAC;IAEM,aAAa,CAAE,OAAgB,EAAE,QAAa,EAAC,SAAe,EAAC,YAAkB;QACtF,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QAEtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,GAAC,QAAQ,GAAC,GAAG,GAAC,SAAS,GAAC,GAAG,GAAC,YAAY,CAAC,EAAE,OAAO,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IAC5H,CAAC;IAEM,aAAa,CAAE,QAAa,EAAC,SAAe,EAAC,YAAkB;QACpE,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,GAAC,QAAQ,GAAC,GAAG,GAAC,SAAS,GAAC,GAAG,GAAC,YAAY,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IAC5G,CAAC;IAEM,UAAU,CAAC,OAAgB;QAChC,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,EAAG,OAAO,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACrF,CAAC;IAEM,kBAAkB;QAEvB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACvE,CAAC;IAEM,sBAAsB,CAAC,QAAa,EAAC,SAAe,EAAE,OAAY;QACvE,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,mBAAmB,GAAC,QAAQ,GAAG,GAAG,GAAG,SAAS,GAAE,GAAG,GAAG,OAAO,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IAClH,CAAC;IAEM,qBAAqB,CAAE,eAAgC,EAAE,QAAa,EAAC,SAAe,EAAE,OAAY;QACzG,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QAEtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,mBAAmB,GAAC,QAAQ,GAAG,GAAG,GAAG,SAAS,GAAE,GAAG,GAAG,OAAO,CAAC,EAAG,eAAe,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACtJ,CAAC;IAEM,qBAAqB,CAAC,QAAa,EAAC,SAAe,EAAE,OAAY;QACtE,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,mBAAmB,GAAC,QAAQ,GAAG,GAAG,GAAG,SAAS,GAAE,GAAG,GAAG,OAAO,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACrH,CAAC;IAEM,kBAAkB,CAAC,eAAgC;QACxD,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE,eAAe,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IACjG,CAAC;IAEO,kBAAkB,CAAC,EAAM;QAC/B,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,GAAC,EAAE,CAAC,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IAC1E,CAAC;;4EAvJU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAyC;;AAMlC,MAAM,yBAAyB;IAEpC;IACE,CAAC;IAEH,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAEhD,IAAI,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;YACzE,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;gBACd,UAAU,EAAE;oBACV,aAAa,EAAE,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC;iBACjD;aACF,CAAC,CAAC;SACJ;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;;kGAfU,yBAAyB;4GAAzB,yBAAyB,WAAzB,yBAAyB,mBAFxB,MAAM;6FAEP,yBAAyB;cAHrC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA6C;AAIU;;;AAEvD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Absence} from '../absences/absence';\n\n@Component({\n  selector: 'app-absence-form',\n  templateUrl: './absence-form.component.html',\n  styleUrls: ['./absence-form.component.css']\n})\nexport class AbsenceFormComponent implements OnInit {\n  persons: any;\n  idPerson:any;\n  absences :any;\n  idAbsence :any;\n\n\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router : Router) { }\n\n  ngOnInit(): void {\n    this.getPersoninfo();\n    this.getAbsencesinfo();\n  }\n\n  public getPersoninfo(){\n    this.service.getPersons()\n      .subscribe(person => this.persons = person);\n  }\n\n  public getAbsencesinfo(){\n    this.service.getIndisponibilite()\n      .subscribe(absence => this.absences = absence);\n  }\n\n  save(idPerson: String, indispo_id: String, dateDebut: String, dateFin: String) {\n    console.log(idPerson)\n    this.service.addAbsence({idPerson,indispo_id,dateDebut,dateFin}as Absence).subscribe()\n  }\n}\n","<h1> Ajout absence </h1>\n\n\n<h2>Personne absente</h2>\n  <form appearance=\"fill\">\n    <label>Personne absente</label>\n    <select  matNativeControl [(ngModel)]=\"idPerson\"  name=\"person\"  class=\"form-control form-control-sm\" #id_person>\n\n      <option  *ngFor=\"let person of persons\" [value]=\"person.idPerson\" >\n        {{person.nom}} {{person.prenom}}\n      </option>\n    </select>\n  </form>\n\n<h2> raison absence </h2>\n<form>\n\n  <select [(ngModel)]=\" idAbsence\"  name=\"absence\"  class=\"form-control form-control-sm\" #idindisponibilite >\n\n    <option  *ngFor=\"let absence of absences\" [value]=\"absence.idindisponibilite\"  >\n      {{absence.type}}\n    </option>\n  </select>\n</form>\n<br>\n<label >Date début</label>\n<div >\n  <input  class=\"form-control\" type=\"date\"  id=\"example-datetime-local-input\" #datedebut>\n</div>\n<div>\n  <label >Date de fin</label>\n  <div >\n    <input  class=\"form-control\" type=\"date\"  id=\"example-datetime-local-input\" #datefin>\n  </div>\n  <div>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"save(id_person.value,idindisponibilite.value,datedebut.value,datefin.value);\">   Sauvegarder</button>\n","import { Component, OnInit } from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Absence} from '../absences/absence';\n\n@Component({\n  selector: 'app-absence-update-form',\n  templateUrl: './absence-update-form.component.html',\n  styleUrls: ['./absence-update-form.component.css']\n})\nexport class AbsenceUpdateFormComponent implements OnInit {\n\n  absence : any;\n  persons: any;\n  absences : any;\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router : Router) { }\n\n  ngOnInit(): void {\n    this.getinfo();\n    this.getAbsencesinfo();\n    this.getPersoninfo();\n  }\n\n  private getinfo() {\n    const indispo_id = this.route.snapshot.params.id1;\n    const idPerson = this.route.snapshot.params.id2;\n    const idSpecifique = this.route.snapshot.params.id3;\n    this.service.getAbsenceByID(idPerson,indispo_id,idSpecifique).subscribe(absence => this .absence = absence);\n  }\n\n  public getPersoninfo(){\n    this.service.getPersons()\n      .subscribe(person => this.persons = person);\n  }\n\n  public getAbsencesinfo(){\n    this.service.getIndisponibilite()\n      .subscribe(absence => this.absences = absence);\n  }\n\n  update(idPerson: any, indispo_id: any, dateDebut: any, dateFin: any) {\n\n  this.service.updateAbsence({idPerson,indispo_id,dateDebut,dateFin} as Absence,this.route.snapshot.params.id2,this.route.snapshot.params.id1,this.route.snapshot.params.id3).subscribe();\n  }\n}\n","<h1> modification absence </h1>\n\n\n<h2>Personne absente</h2>\n<form appearance=\"fill\">\n  <label>Personne absente</label>\n  <select disabled  [ngModel]=\"absence?.idPerson\" name=\"person\"  class=\"form-control form-control-sm\" #id_person>\n\n    <option  *ngFor=\"let person of persons\" [value]=\"person.idPerson\" >\n      {{person.nom}} {{person.prenom}}\n    </option>\n  </select>\n</form>\n\n\n<form>\n  <label>raison d'absence</label>\n  <select disabled [ngModel]=\"absence?.indispo_id\" name=\"absence\"  class=\"form-control form-control-sm\" #idindisponibilite >\n    <option  *ngFor=\"let absence of absences\" [value]=\"absence.idindisponibilite\"  >\n      {{absence.type}}\n    </option>\n  </select>\n</form>\n<br>\n<label >Date début</label>\n<div >\n  <input  class=\"form-control\" type=\"date\" [ngModel]=\"absence?.dateDebut  | date :'yyyy-LL-dd'\" id=\"example-datetime-local-input\" #datedebut>\n</div>\n<div>\n  <label >Date de fin</label>\n  <div >\n    <input  class=\"form-control\" type=\"date\" [ngModel]=\"absence?.dateFin  | date :'yyyy-LL-dd'\" id=\"example-datetime-local-input\" #datefin>\n  </div>\n  <div>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"update(id_person.value,idindisponibilite.value,datedebut.value,datefin.value);\">   Sauvegarder</button>\n","import {Component, OnInit} from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-absences',\n  templateUrl: './absences.component.html',\n  styleUrls: ['./absences.component.css']\n})\nexport class AbsencesComponent implements OnInit {\n   absence: any;\n\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router: Router) { }\n\n  ngOnInit(): void {\n    this.getAbsence();\n  }\n\n  getAbsence(){\n    const response = this.service.getAbsences();\n    response.subscribe(absence => this.absence = absence);\n  }\n\n  delete(indispo_id: any, idPerson: any, idSpecifique: any) {\nthis.service.deleteAbsence(idPerson,indispo_id,idSpecifique).subscribe()\n  }\n}\n","<h1> Liste des absences</h1>\r\n\r\n<button  class=\"btn btn-info\" routerLink=\"../creationabsence\"> Ajouter absence</button>\r\n\r\n<table class=\"table table-striped\">\r\n  <thead>\r\n  <tr>\r\n    <th scope=\"col\">#</th>\r\n    <th scope=\"col\">Personne</th>\r\n    <th scope=\"col\">Type Absence</th>\r\n    <th scope=\"col\">Date de Début</th>\r\n    <th scope=\"col\"> Date de fin</th>\r\n    <th scope=\"col\"> </th>\r\n    <th scope=\"col\"> </th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let absence of absence, index as i\">\r\n    <th scope=\"row\">{{ i + 1 }}</th>\r\n\r\n\r\n    <td scope=\"row\">{{absence.nomPerson}}  {{absence.prenomPerson}}</td>\r\n    <td scope=\"row\">{{absence.nomIndispo}}</td>\r\n    <td scope=\"row\">{{absence.dateDebut  | date :'dd-LL-yyyy'}}</td>\r\n    <td scope=\"row\">{{absence.dateFin | date :'dd-LL-yyyy'}}</td>\r\n    <td scope=\"row\">\r\n      <button type=\"button\" class=\"btn btn-secondary\" routerLink=\"../modificationabsence/{{absence.indispo_id}}/{{absence.idPerson}}/{{absence.idSpecifique}}\"> Modifier </button>\r\n\r\n    </td>\r\n\r\n    <td scope=\"row\">\r\n      <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete(absence.indispo_id,absence.idPerson,absence.idSpecifique)\"> Supprimer </button>\r\n\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n  </table>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {CoursComponent} from './cours/cours.component';\r\nimport {CoursDetailsComponent} from './cours-details/cours-details.component';\r\nimport {PersonsComponent} from './persons/persons.component';\r\nimport {MessagesComponent} from './messages/messages.component';\r\nimport {AbsencesComponent} from './absences/absences.component';\r\nimport {PersonsResultatsComponent} from './persons-resultats/persons-resultats.component';\r\nimport {PersonsDetailsComponent} from './persons-details/persons-details.component';\r\nimport {MessagesCreationComponent} from './messages-creation/messages-creation.component';\r\nimport {PersonsFormComponent} from './persons-form/persons-form.component';\r\nimport {MessagesModificationComponent} from './messages-modification/messages-modification.component';\r\nimport {AbsenceFormComponent} from './absence-form/absence-form.component';\r\nimport {AbsenceUpdateFormComponent} from './absence-update-form/absence-update-form.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'home', component: HomeComponent,\r\n  children: [\r\n    {path: 'cours', component: CoursComponent},\r\n    {path: 'detailscours/:id', component: CoursDetailsComponent},\r\n    {path : 'detailseleve/:id', component: PersonsResultatsComponent},\r\n    {path : 'eleves', component : PersonsComponent},\r\n    {path: 'modifier/:id', component: PersonsDetailsComponent},\r\n    {path : 'messages', component : MessagesComponent},\r\n    {path : 'absences', component : AbsencesComponent},\r\n    {path : 'creationmessage', component : MessagesCreationComponent},\r\n    {path : 'formeleve', component: PersonsFormComponent},\r\n    {path : 'modificationmessage/:id', component : MessagesModificationComponent},\r\n    {path : 'creationabsence', component : AbsenceFormComponent},\r\n    {path : 'modificationabsence/:id1/:id2/:id3', component : AbsenceUpdateFormComponent},\r\n  ]},\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'AngularAffichageDynamique';\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {BasicAuthInterceptService} from './service/basic-auth-intercept.service';\r\nimport {CoursComponent} from './cours/cours.component';\r\nimport {CoursDetailsComponent} from './cours-details/cours-details.component';\r\nimport {PersonsComponent} from './persons/persons.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {AbsencesComponent} from './absences/absences.component';\r\nimport {MessagesComponent} from './messages/messages.component';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {PersonsResultatsComponent} from './persons-resultats/persons-resultats.component';\r\nimport {PersonsDetailsComponent} from './persons-details/persons-details.component';\r\nimport { MessagesCreationComponent } from './messages-creation/messages-creation.component';\r\nimport {NgxWigModule} from 'ngx-wig';\r\nimport { PersonsFormComponent } from './persons-form/persons-form.component';\r\nimport { MessagesModificationComponent } from './messages-modification/messages-modification.component';\r\nimport { AbsenceFormComponent } from './absence-form/absence-form.component';\r\nimport { IndisponibiliteComponent } from './indisponibilite/indisponibilite.component';\nimport { AbsenceUpdateFormComponent } from './absence-update-form/absence-update-form.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    CoursComponent,\r\n    CoursDetailsComponent,\r\n    PersonsComponent,\r\n    AbsencesComponent,\r\n    MessagesComponent,\r\n    PersonsResultatsComponent,\r\n    PersonsDetailsComponent,\r\n    MessagesCreationComponent,\r\n    PersonsFormComponent,\r\n    MessagesModificationComponent,\r\n    AbsenceFormComponent,\r\n    IndisponibiliteComponent,\r\n    AbsenceUpdateFormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    NgbModule,\r\n    NgxWigModule,\r\n\r\n],\r\n\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptService, multi: true,\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, OnInit} from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-cours-details',\n  templateUrl: './cours-details.component.html',\n  styleUrls: ['./cours-details.component.css']\n})\nexport class CoursDetailsComponent implements OnInit {\n\n   cours: any;\n   resultat : any;\n  constructor(private service: RestapiService, private route: ActivatedRoute, ) { }\n\n  ngOnInit(): void {\n    this.getInfo();\n    this.getElevesresultat();\n  }\n\n  getInfo(){\n    const id = this.route.snapshot.params.id;\n    this.service.getCoursid(id)\n      .subscribe(cours => this.cours = cours);\n  }\n\n  getElevesresultat(){\n    const id = this.route.snapshot.params.id;\n    this.service.getResultatByCours(id)\n      .subscribe(resultat => this.resultat = resultat);\n  }\n}\n","\n\n\n<div *ngIf=\"cours\">\n  <h2>{{cours.name}}</h2>\n</div>\n\n<h2> Tableau des résultat</h2>\n\n<table class=\"table table-striped\">\n  <thead>\n  <th scope=\"col\">#</th>\n  <th scope=\"col\">Nom</th>\n  <th scope=\"col\">Prenom</th>\n  <th scope=\"col\">resultat</th>\n  <th scope=\"col\"> Réussite </th>\n\n  </thead>\n  <tbody>\n  <tr *ngFor=\"let resultat of resultat, index as i\">\n    <th scope=\"row\">{{i+1}}</th>\n    <td scope=\"row\">{{resultat.nomPerson}}</td>\n    <td scope=\"row\">{{resultat.prenomPerson}}</td>\n    <td scope=\"row\">{{resultat.resultat}}</td>\n    <td scope=\"row\">{{resultat.reussite}}</td>\n\n  </tbody>\n\n</table>\n\n","import {Component, OnInit} from '@angular/core';\nimport {RestapiService} from '../restapi.service';\n\n@Component({\n  selector: 'app-cours-detail',\n  templateUrl: './cours.component.html',\n  styleUrls: ['./cours.component.css']\n})\nexport class CoursComponent implements OnInit {\n\n  cours;\n\n  columnsToDisplay = ['name'];\n\n\n  constructor(private service: RestapiService) { }\n\n  ngOnInit(): void {\n    this.getCours();\n  }\n  getCours() {\n    const response = this.service.getCours();\n    response.subscribe(data => this.cours = data);\n\n\n  }\n}\n","<head>\n  <title>Affichage Dynamique</title>\n\n\n</head>\n\n<button type=\"button\" class=\"btn btn-primary\" routerLink=\"../detailscours/{{cours?.idCours}}\"> Ajouter Cours</button>\n\n\n\n  <table  class=\"table table-striped\">\n    <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\" sortable=\"name\">Nom </th>\n      <th scope=\"col\" sortable=\"datedebut\"> Date Début</th>\n      <th scope=\"col\" sortable=\"datefin\"> Date fin</th>\n      <th scope=\"col\" > Détails</th>\n      <th scope=\"col\" > </th>\n\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let cours of cours, index as i\">\n      <th scope=\"row\">{{ i + 1 }}</th>\n      <td scope=\"row\">{{cours?.name}}</td>\n      <td scope=\"row\">{{cours?.datedebut |date :\"dd-MM-yyyy\"}}</td>\n      <td scope=\"row\">{{cours?.datefin |date :\"dd-MM-yyyy\"}}</td>\n      <td scope=\"row\">\n      <button type=\"button\" class=\"btn btn-primary\" routerLink=\"../detailscours/{{cours?.idCours}}\"> Détails</button>\n\n      </td>\n\n    </tr>\n\n    </tbody>\n  </table>\n\n\n\n","import {Component, OnInit} from '@angular/core';\r\nimport {RestapiService} from '../restapi.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  person: any;\r\n  constructor(private service: RestapiService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  doLogout() {\r\n    localStorage.clear();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"fr\">\r\n\r\n<head>\r\n  <title>Affichage Dynamique</title>\r\n  <meta charset=\"utf-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n</head>\r\n\r\n<body>\r\n<ul ngbNav #nav=\"ngbNav\" class=\"nav-tabs\">\r\n  <li ngbNavItem>\r\n<button class=\"btn-primary\"  [routerLink]=\"['cours'] \"> cours</button>\r\n  </li>\r\n  <button class=\"btn-primary\" [routerLink]=\"['absences']\">  absences</button>\r\n  <button class=\"btn-primary\" [routerLink]=\"['messages']\" >  messages</button>\r\n  <button class=\"btn-primary\"[routerLink]=\"['eleves']\" > listes </button>\r\n\r\n  <button class=\"btn-danger\"  (click)=\"doLogout()\" >Déconnection </button>\r\n\r\n\r\n\r\n\r\n</ul>\r\n<router-outlet></router-outlet>\r\n\r\n\r\n\r\n</body>\r\n\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-indisponibilite',\n  templateUrl: './indisponibilite.component.html',\n  styleUrls: ['./indisponibilite.component.css']\n})\nexport class IndisponibiliteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>indisponibilite works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;\n  password: string;\n  message: any;\n\n  constructor(private service: RestapiService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  doLogin(){\n   const resp =  this.service.login(this.username, this.password);\n   resp.subscribe(data => {\n     sessionStorage.setItem('basicauth', btoa(this.username + ':' + this.password)) ;\n     this.router.navigate([\"/home\"]);\n    });\n  }\n\n}\n","<div class=\"background-wrap\">\r\n  <div class=\"background\"></div>\r\n</div>\r\n\r\n<form id=\"accesspanel\" action=\"\">\r\n  <h1 id=\"litheader\">Affichage dynamique</h1>\r\n  <div class=\"inset\">\r\n    <p>\r\n      <input type=\"text\" name=\"username\" [(ngModel)]=\"username\" id=\"email\" placeholder=\"username\">\r\n    </p>\r\n    <p>\r\n      <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" id=\"password\" placeholder=\"password\">\r\n    </p>\r\n  </div>\r\n  <p class=\"p-container\">\r\n    <input type=\"submit\" name=\"Login\" id=\"go\" value=\"Login\" (click)=\"doLogin()\">\r\n  </p>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Message} from '../messages/message';\nimport {Persons} from '../persons/persons';\nimport {dateComparator} from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools';\nimport {MessagesComponent} from '../messages/messages.component';\n\n@Component({\n  selector: 'app-messages-creation',\n  templateUrl: './messages-creation.component.html',\n  styleUrls: ['./messages-creation.component.css']\n})\nexport class MessagesCreationComponent implements OnInit {\n  contenu: any;\n  titreMessage: any;\n\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router: Router,) { }\n\n  ngOnInit(): void {\n  }\n\n  valider() {\n    if(!(this.contenu == undefined && this.titreMessage ==undefined)){\n\n      const contenu =this.contenu;\n      const titreMessage= this.titreMessage;\n      const nomPerson = localStorage.getItem('username');\n      const createdDate = Date.now().toString();\n\n\n      this.service.addMessage({contenu,titreMessage, createdDate, nomPerson} as Message).subscribe();\n    }\n  }\n\n  annuler() {\n    this.router.navigate([\"../home/messages\"]);\n  }\n}\n\n","<h1> Création de Message</h1>\n\n<h2> Titre du message</h2>\n<input [(ngModel)]=\"titreMessage\" class=\"form-control\" type=\"text\" placeholder=\"Titre du Message\">\n<h2> Corps du message </h2>\n<ngx-wig [(ngModel)]=\"contenu\" placeholder=\"Corps du message\"></ngx-wig>\n\n<button type=\"button\" class=\"btn btn-success\" (click)=\"valider()\"> Enregistrer </button>\n<button type=\"button\" class=\"btn btn-danger\" (click)=\"annuler()\"> Annuler </button>\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Persons} from '../persons/persons';\nimport {Message} from '../messages/message';\n\n@Component({\n  selector: 'app-messages-modification',\n  templateUrl: './messages-modification.component.html',\n  styleUrls: ['./messages-modification.component.css']\n})\nexport class MessagesModificationComponent implements OnInit {\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router : Router) { }\n\n  message: any;\n  contenu: any;\n  titreMessage: any;\n  ngOnInit(): void {\n    this.getInfo();\n\n  }\n\n  getInfo(){\n    const id = this.route.snapshot.params.id;\n    this.service.getMessageByID(id)\n      .subscribe(message => this.message = message);\n\n  }\n\n  update(titreMessage: String, contenu: String) {\n\n      const id = this.route.snapshot.params.id;\n\n\n      const nomPerson = localStorage.getItem('username');\n      const createdDate = Date.now().toString();\n\n\n      this.service.updateMessage({contenu,titreMessage, createdDate, nomPerson} as Message,id).subscribe();\n\n   // this.router.navigate([\"./home/eleves\"]);\n  }\n\n  goBack() {\n    this.router.navigate([\"./home/messages\"]);\n  }}\n","<h1> Modication de Message</h1>\r\n\r\n<h2> Titre du message</h2>\r\n<input [ngModel]=\"message?.titreMessage\" placeholder=\"{{message.titreMessage}}\">\r\n<h2> Corps du message </h2>\r\n<ngx-wig [ngModel]=\"message?.contenu\" placeholder=\"{{message.contenu}}\"></ngx-wig>\r\n\r\n<button type=\"button\" class=\"btn btn-success\" (click)=\"update(message.titreMessage,message.contenu)\"> Enregistrer </button>\r\n<button type=\"button\" class=\"btn btn-danger\" (click)=\"goBack()\"> Annuler </button>\r\n\r\n","import {Component, OnInit} from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router: Router, ) { }\n\n  messages:any\n\n  ngOnInit(): void {\n    this.getMessages()\n  }\n\n  getMessages() {\n    const response = this.service.getMessages();\n    response.subscribe(message => this.messages = message);\n  }\n\n  delete(idPerson: any) {\n    console.log(idPerson)\n\n\n    this.service.deleteMessage(idPerson).subscribe();\n  }\n}\n","<h2>Liste des messages</h2>\n<button type=\"button\" class=\"btn btn-info\" routerLink=\"../creationmessage\"> Nouveau Message </button>\n<body>\n<table class=\"table table-striped\">\n  <tr>\n    <th scope=\"col\">#</th>\n    <th scope=\"col\">Titre message</th>\n    <th scope=\"col\">Date de Création</th>\n    <th scope=\"col\">Auteur</th>\n    <th scope=\"col\"> </th>\n    <th scope=\"col\"> </th>\n  </tr>\n\n  <thead>\n\n  </thead>\n\n  <tbody>\n  <tr *ngFor=\"let message of messages, index as i\">\n    <th scope=\"row\">{{ i + 1 }}</th>\n\n\n    <td scope=\"row\">{{message.titreMessage}}</td>\n    <td scope=\"row\">{{message.createdDate | date :'dd-LL-yyyy'}}</td>\n    <td scope=\"row\">{{message.nomPerson }}</td>\n    <td scope=\"row\">\n      <button type=\"button\" class=\"btn btn-secondary\" routerLink=\"../modificationmessage/{{message.idMessage}}\"> Modifier </button>\n\n    </td>\n    <td scope=\"row\">\n\n      <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete(message.idMessage)\"> Supprimer </button>\n\n    </td>\n  </tr>\n\n\n</table>\n\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Persons} from '../persons/persons';\n\n@Component({\n  selector: 'app-eleves-details',\n  templateUrl: './persons-details.component.html',\n  styleUrls: ['./persons-details.component.css']\n})\nexport class PersonsDetailsComponent implements OnInit {\n\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router : Router) { }\n\n  person: any;\n  ngOnInit(): void {\n    this.getInfo();\n\n  }\n\n  getInfo(){\n    const id = this.route.snapshot.params.id;\n    this.service.getPersonid(id)\n      .subscribe(person => this.person = person);\n  }\n\n  update(nom: string, prenom: string, email: string , dateAnniversaire: string) {\n    const id = this.route.snapshot.params.id;\n    this.service.updateEleve({nom, prenom, email, dateAnniversaire} as Persons,id).subscribe();\n    this.router.navigate([\"./home/eleves\"]);\n  }\n\n  goBack() {\n    this.router.navigate([\"./home/eleves\"]);\n  }}\n","<div >\n  <label>Nom</label>\n  <input #nom [ngModel]=\"person.nom\"  placeholder=\"{{person?.nom}}\"/>\n</div>\n<div >\n  <label>Prenom</label>\n  <input #prenom [ngModel]=\"person.prenom\" placeholder=\"{{person?.prenom}}\">\n</div>\n\n<div >\n  <label >Adresse Email</label>\n  <input   [ngModel]=\"person.email\" type=\"email\" class=\"form-control\" placeholder=\"{{person?.email}}\"  #email/>\n\n</div >\n\n<label >Date de naissance</label>\n\n<div >\n  <input  class=\"form-control\" type=\"date\" [ngModel]=\"person?.dateAnniversaire  | date :'yyyy-LL-dd'\" id=\"example-datetime-local-input\" #date>\n</div>\n\n\n<button type=\"button\" class=\"btn btn-success\" (click)=\"update(nom.value,prenom.value,email.value, date.value ); nom.value =''\">   Sauvegarder</button>\n<button type=\"button\" class=\"btn btn-danger\" (click)=\"goBack()\">   Annuler </button>\n","import { Component, OnInit } from '@angular/core';\nimport {Persons} from '../persons/persons';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-eleves-form',\n  templateUrl: './persons-form.component.html',\n  styleUrls: ['./persons-form.component.css']\n})\nexport class PersonsFormComponent implements OnInit {\n\n  roles: any;\n  idRole: any;\n\n\n\n\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router: Router,) { }\n\n  ngOnInit(): void {\n    this.getRoles();\n  }\n\n  save(nom: string, prenom: string, email: string , dateAnniversaire: string, idRole :any) {\n\n    this.service.addEleve({nom, prenom, email, dateAnniversaire,idRole} as Persons).subscribe();\n\n  }\n\n  private getRoles() {\n    const response = this.service.getRoles();\n    response.subscribe(role => this.roles = role);\n  }\n}\n","<form xmlns=\"http://www.w3.org/1999/html\">\n<div >\n  <label>Nom</label>\n  <input #nom />\n</div>\n<div >\n  <label>Prenom</label>\n  <input #prenom>\n</div>\n\n<div >\n  <label >Adresse Email</label>\n  <input  type=\"email\" class=\"form-control\" placeholder=\"Email\"  #email/>\n\n</div >\n\n<label >Date de naissance</label>\n<div >\n  <input  class=\"form-control\" type=\"date\"  id=\"example-datetime-local-input\" #date>\n</div>\n<div>\n\n  <form>\n\n    <select [(ngModel)]=\"idRole\"  name=\"roles \">\n\n      <option  *ngFor=\"let role of roles\" [value]=\"role.idRole\" >\n        {{role.name}}\n      </option>\n    </select>\n\n  </form>\n\n</div>\n\n\n<button type=\"button\" class=\"btn btn-success\" (click)=\"save(nom.value,prenom.value,email.value, date.value ,idRole);\">   Sauvegarder</button>\n</form>\n","import {Component, OnInit} from '@angular/core';\r\nimport {RestapiService} from '../restapi.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-eleves-details',\r\n  templateUrl: './persons-resultats.component.html',\r\n  styleUrls: ['./persons-resultats.component.css']\r\n})\r\nexport class PersonsResultatsComponent implements OnInit {\r\n\r\n   person: any;\r\n   resultat : any;\r\n  constructor(private service: RestapiService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n    this.getresultatbyPerson();\r\n  }\r\n\r\n\r\n  getInfo(){\r\n    const id = this.route.snapshot.params.id;\r\n    this.service.getPersonid(id)\r\n      .subscribe(person => this.person = person);\r\n  }\r\n\r\n  getresultatbyPerson(){\r\n    const id = this.route.snapshot.params.id;\r\n    this.service.getResultatByPerson(id)\r\n      .subscribe(resultat => this.resultat = resultat);\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"person\">\r\n  <h1>{{person.nom}} {{person.prenom}}</h1>\r\n  <h2>{{person.dateAnniversaire|date :'dd-LL-yyyy'}}</h2>\r\n\r\n<h2> Tableau des résultat</h2>\r\n\r\n  <table class=\"table table-striped\">\r\n    <thead>\r\n    <th scope=\"col\">#</th>\r\n    <th scope=\"col\">Cours</th>\r\n    <th scope=\"col\">Annee</th>\r\n    <th scope=\"col\">resultat</th>\r\n    <th scope=\"col\"> Réussite </th>\r\n\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngFor=\"let resultat of resultat, index as i\">\r\n    <th scope=\"row\">{{i+1}}</th>\r\n      <td scope=\"row\">{{resultat.nomCours}}</td>\r\n      <td scope=\"row\">{{resultat.annee| date :'yyyy'}}</td>\r\n      <td scope=\"row\">{{resultat.resultat}}</td>\r\n      <td scope=\"row\">{{resultat.reussite}}</td>\r\n\r\n    </tbody>\r\n\r\n  </table>\r\n\r\n\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\nimport {RestapiService} from '../restapi.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Persons} from './persons';\n\n@Component({\n  selector: 'app-eleves',\n  templateUrl: './persons.component.html',\n  styleUrls: ['./persons.component.css']\n})\nexport class PersonsComponent implements OnInit {\n\n\n\n   eleve: Persons;\n   roles: any;\n  idRole: String;\n\n\n\n\n  constructor(private service: RestapiService, private route: ActivatedRoute,private router: Router,  ) { }\n\n  ngOnInit(): void {\n    this.getPerson();\n    this.getRoles();\n  }\n  getPerson() {\n    const response = this.service.getPersons();\n    response.subscribe(eleve => this.eleve = eleve);\n  }\n\n\n  private getRoles() {\n    const response = this.service.getRoles();\n    response.subscribe(role => this.roles = role);\n  }\n\n\n  delete(id :any) {\n    this.service.deleteEleve(id).subscribe().add();\n\n  }\n\n  filtrage(idRoles: String) {\n    const response = this.service.getPersonbyRoles(idRoles);\n    response.subscribe(eleve => this.eleve = eleve);\n  }\n}\n","<body>\r\n<button  class=\"btn btn-info\" routerLink=\"../formeleve\"> Ajouter personne</button>\r\n\r\n<form>\r\n  <select  [(ngModel)]=\"idRole\"  name=\"roles \" class=\"form-control form-control-sm\">\r\n    <option  *ngFor=\"let role of roles\" [value]=\"role.idRole\" >\r\n      {{role.name}}\r\n    </option>\r\n  </select>\r\n\r\n</form>\r\n\r\n<button type=\"button\" class=\"btn-secondary\" (click)=\"filtrage(idRole)\"> Filtrer </button>\r\n\r\n<table class=\"table table-striped\">\r\n  <tr>\r\n    <th scope=\"col\">#</th>\r\n    <th scope=\"col\">Nom</th>\r\n    <th scope=\"col\">Prenom</th>\r\n    <th scope=\"col\">Email</th>\r\n    <th scope=\"col\"> Date de naissance</th>\r\n    <th scope=\"col\"> </th>\r\n    <th scope=\"col\"> </th>\r\n    <th scope=\"col\"> </th>\r\n    <th scope=\"col\"> Ajout sur écran </th>\r\n\r\n  </tr>\r\n<tbody>\r\n<tr *ngFor=\"let eleve of eleve, index as i\">\r\n  <th scope=\"row\">{{ i + 1 }}</th>\r\n\r\n\r\n  <td scope=\"row\">{{eleve.nom}}</td>\r\n  <td scope=\"row\">{{eleve.prenom}}</td>\r\n  <td scope=\"row\">{{eleve.email}}</td>\r\n  <td scope=\"row\">{{eleve.dateAnniversaire | date :'dd-LL-yyyy'}}</td>\r\n  <td scope=\"row\">\r\n    <button type=\"button\" class=\"btn btn-info\" routerLink=\"../detailseleve/{{eleve.idPerson}}\"> Détails </button>\r\n  </td>\r\n  <td scope=\"row\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" routerLink=\"../modifier/{{eleve.idPerson}}\"> Modifier </button>\r\n\r\n  </td>\r\n\r\n  <td scope=\"row\">\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete(eleve.idPerson)\"> Supprimer </button>\r\n\r\n  </td>\r\n  <td>\r\n    <form>\r\n      <select  [(ngModel)]=\"idRole\"  name=\"roles \" class=\"form-control form-control-sm\">\r\n        <option  *ngFor=\"let role of roles\" [value]=\"role.idRole\" >\r\n          {{role.name}}\r\n        </option>\r\n      </select>\r\n\r\n    </form>\r\n\r\n    <button type=\"button\" class=\"btn-secondary\" (click)=\"filtrage(idRole)\"> Filtrer </button>\r\n  </td>\r\n</tr>\r\n\r\n\r\n</tbody>\r\n\r\n</table>\r\n\r\n</body>\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Persons} from './persons/persons';\r\nimport {Message} from './messages/message';\r\nimport {Absence} from './absences/absence';\r\nimport {Indisponibilite} from './indisponibilite/Indisponibilite';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestapiService {\r\n\r\n   url : String = \"https://back-end-springboot.herokuapp.com\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public login(username: string, password: string){\r\n\r\n    const headers = new HttpHeaders({Authorization : 'Basic  ' + btoa(username + ':' + password)});\r\n    localStorage.setItem('username', username);\r\n\r\n    let authString = 'Basic ' + btoa(username + ':' + password);\r\n    localStorage.setItem('basicauth', authString);\r\n\r\n    return this.http.get(this.url.concat('/users/login'), {headers});\r\n  }\r\n\r\n  public getPersons(): Observable<Persons>{\r\n\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get<Persons>(this.url.concat('/persons/'), {headers});\r\n  }\r\n  public getCours(){\r\n\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/cours/'), {headers});\r\n  }\r\n\r\n  public getCoursid(id: any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get((this.url.concat('/cours/' +id)), {headers});\r\n  }\r\n\r\n  public getPersonid(id: any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get((this.url.concat('/persons/' +id)), {headers});\r\n  }\r\n\r\n  public  getResultatByPerson(id:any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get((this.url.concat('/resultat/' +id)), {headers});\r\n  }\r\n\r\n  public addEleve(eleve: Persons): Observable<Persons>{\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.post<Persons>( this.url.concat('/eleves') , eleve, {headers});\r\n  }\r\n\r\n  public updateEleve(eleve: Persons, id:any): Observable<Persons>{\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.put<Persons>( this.url.concat(/persons/+id) , eleve, {headers});\r\n  }\r\n  public deleteEleve(id:any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.delete(( this.url.concat(/persons/+id)), {headers});\r\n  }\r\n\r\n  public getMessages(){\r\n\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/messages'), {headers});\r\n  }\r\n\r\n  public addMessage(Message: Message): Observable<Message>{\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.post<Message>( 'http://localhost:8080/messages' , Message, {headers});\r\n  }\r\n\r\n  public deleteMessage(id:any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.delete(('http://localhost:8080/messages/').concat(id), {headers});\r\n  }\r\n\r\n\r\n  public getRoles(){\r\n\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/roles'), {headers});\r\n  }\r\n\r\n  public getPersonbyRoles(id:any) : Observable<Persons>{\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get<Persons>(this.url.concat(/roles/+id), {headers});\r\n  }\r\n\r\n  public updateMessage (message: Message, id:any): Observable<Message> {\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n\r\n    return this.http.put<Message>( this.url.concat(/messages/+id) , message, {headers});\r\n  }\r\n  public getMessageByID(id: any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(( this.url.concat(/messages/+id)), {headers});\r\n  }\r\n\r\n  public getAbsences(){\r\n\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/absences'), {headers});\r\n  }\r\n  public getAbsenceByID(idperson: any,idindispo : any,idspecifique : any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/absences/'+idperson+\"/\"+idindispo+\"/\"+idspecifique), {headers});\r\n  }\r\n\r\n  public updateAbsence (absence: Absence, idperson: any,idindispo : any,idspecifique : any): Observable<Absence> {\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n\r\n    return this.http.put<Absence>( this.url.concat('/absences/'+idperson+\"/\"+idindispo+\"/\"+idspecifique), absence, {headers});\r\n  }\r\n\r\n  public deleteAbsence( idperson: any,idindispo : any,idspecifique : any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.delete(this.url.concat('/absences/'+idperson+\"/\"+idindispo+\"/\"+idspecifique), {headers});\r\n  }\r\n\r\n  public addAbsence(absence: Absence): Observable<Absence>{\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.post<Absence>( this.url.concat('/absences') , absence, {headers});\r\n  }\r\n\r\n  public getIndisponibilite(){\r\n\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/indisponibilite'), {headers});\r\n  }\r\n\r\n  public getIndisponibiliteByID(idPerson: any,idIndispo : any ,idCours :any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/indisponibilite/'+idPerson + \"/\" + idIndispo +\"/\" + idCours), {headers});\r\n  }\r\n\r\n  public updateIndisponibilite (indisponibilite: Indisponibilite, idPerson: any,idIndispo : any ,idCours :any): Observable<Indisponibilite> {\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n\r\n    return this.http.put<Indisponibilite>( this.url.concat('/indisponibilite/'+idPerson + \"/\" + idIndispo +\"/\" + idCours) , indisponibilite, {headers});\r\n  }\r\n\r\n  public deleteindisponibilite(idPerson: any,idIndispo : any ,idCours :any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.delete(this.url.concat('/indisponibilite/'+idPerson + \"/\" + idIndispo +\"/\" + idCours), {headers});\r\n  }\r\n\r\n  public addindisponibilite(indisponibilite: Indisponibilite): Observable<Indisponibilite>{\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.post<Message>( this.url.concat('/indisponilite'), indisponibilite, {headers});\r\n  }\r\n\r\n  public  getResultatByCours(id:any){\r\n    const headers = new HttpHeaders(sessionStorage.getItem('authString'));\r\n    return this.http.get(this.url.concat('/resultat/cours/'+id), {headers});\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasicAuthInterceptService implements HttpInterceptor{\n\n  constructor() {\n    }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n    if (localStorage.getItem('username') && localStorage.getItem('basicauth')) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: localStorage.getItem('basicauth')\n        }\n      });\n    }\n    return next.handle(req);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}